{
    "project": {
        "name": "StructureTS-Project",
        "description": "This is a framework for TypeScript.",
        "version": "0.1.0",
        "url": ""
    },
    "files": {
        "../src/com/codebelt/structurets/_declare/jquery.d.ts": {
            "name": "../src/com/codebelt/structurets/_declare/jquery.d.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/_declare/underscore.d.ts": {
            "name": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/component/CarouselComponent.ts": {
            "name": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "modules": {},
            "classes": {
                "CarouselComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/component/TabComponent.ts": {
            "name": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "modules": {},
            "classes": {
                "TabComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/constant/TransitionType.ts": {
            "name": "../src/com/codebelt/structurets/constant/TransitionType.ts",
            "modules": {},
            "classes": {
                "TransitionType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "modules": {},
            "classes": {
                "BaseTransition": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts",
            "modules": {},
            "classes": {
                "TransitionCrossFade": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts",
            "modules": {},
            "classes": {
                "TransitionFadeOutAndIn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/TransitionNone.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/TransitionNone.ts",
            "modules": {},
            "classes": {
                "TransitionNone": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts",
            "modules": {},
            "classes": {
                "TransitionPushDown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts",
            "modules": {},
            "classes": {
                "TransitionPushLeft": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts",
            "modules": {},
            "classes": {
                "TransitionPushRight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts": {
            "name": "../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts",
            "modules": {},
            "classes": {
                "TransitionPushUp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts": {
            "name": "../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts",
            "modules": {},
            "classes": {
                "BaseViewController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts": {
            "name": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "modules": {},
            "classes": {
                "ApplicationCacheController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/BaseController.ts": {
            "name": "../src/com/codebelt/structurets/controller/BaseController.ts",
            "modules": {},
            "classes": {
                "BaseController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/LocalStorageController.ts": {
            "name": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "modules": {},
            "classes": {
                "LocalStorageController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/RouterController.ts": {
            "name": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "modules": {},
            "classes": {
                "RouterController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/TransitionManager.ts": {
            "name": "../src/com/codebelt/structurets/controller/TransitionManager.ts",
            "modules": {},
            "classes": {
                "TransitionManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/controller/UndoManager.ts": {
            "name": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "modules": {},
            "classes": {
                "UndoManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/display/Bitmap.ts": {
            "name": "../src/com/codebelt/structurets/display/Bitmap.ts",
            "modules": {},
            "classes": {
                "Bitmap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/display/Canvas.ts": {
            "name": "../src/com/codebelt/structurets/display/Canvas.ts",
            "modules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/display/CanvasElement.ts": {
            "name": "../src/com/codebelt/structurets/display/CanvasElement.ts",
            "modules": {},
            "classes": {
                "CanvasElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/display/DOMElement.ts": {
            "name": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "modules": {},
            "classes": {
                "DOMElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts": {
            "name": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "modules": {},
            "classes": {
                "DisplayObjectContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/display/MovieClip.ts": {
            "name": "../src/com/codebelt/structurets/display/MovieClip.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/display/Stage.ts": {
            "name": "../src/com/codebelt/structurets/display/Stage.ts",
            "modules": {},
            "classes": {
                "Stage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/native/MouseEvents.ts": {
            "name": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "modules": {},
            "classes": {
                "MouseEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/native/NavigatorEvents.ts": {
            "name": "../src/com/codebelt/structurets/event/native/NavigatorEvents.ts",
            "modules": {},
            "classes": {
                "NavigatorEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/native/WindowEvents.ts": {
            "name": "../src/com/codebelt/structurets/event/native/WindowEvents.ts",
            "modules": {},
            "classes": {
                "WindowEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "modules": {},
            "classes": {
                "ApplicationCacheEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/BaseEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "modules": {},
            "classes": {
                "BaseEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/CarouselEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "modules": {},
            "classes": {
                "CarouselEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/EventBroker.ts": {
            "name": "../src/com/codebelt/structurets/event/EventBroker.ts",
            "modules": {},
            "classes": {
                "EventBroker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/EventDispatcher.ts": {
            "name": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "modules": {},
            "classes": {
                "EventDispatcher": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/LanguageEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/LanguageEvent.ts",
            "modules": {},
            "classes": {
                "LanguageEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/LoaderEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/LoaderEvent.ts",
            "modules": {},
            "classes": {
                "LoaderEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/LocalStorageEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "modules": {},
            "classes": {
                "LocalStorageEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "modules": {},
            "classes": {
                "NetworkMonitorEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/RequestEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/RequestEvent.ts",
            "modules": {},
            "classes": {
                "RequestEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/RouterEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/RouterEvent.ts",
            "modules": {},
            "classes": {
                "RouterEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/TimerEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/TimerEvent.ts",
            "modules": {},
            "classes": {
                "TimerEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/TransitionManagerEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/TransitionManagerEvent.ts",
            "modules": {},
            "classes": {
                "TransitionManagerEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/event/TweenEvent.ts": {
            "name": "../src/com/codebelt/structurets/event/TweenEvent.ts",
            "modules": {},
            "classes": {
                "TweenEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/ICollection.ts": {
            "name": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "modules": {},
            "classes": {
                "ICollection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/ICore.ts": {
            "name": "../src/com/codebelt/structurets/interface/ICore.ts",
            "modules": {},
            "classes": {
                "ICore": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/IDOMElement.ts": {
            "name": "../src/com/codebelt/structurets/interface/IDOMElement.ts",
            "modules": {},
            "classes": {
                "IDOMElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/IDataStore.ts": {
            "name": "../src/com/codebelt/structurets/interface/IDataStore.ts",
            "modules": {},
            "classes": {
                "IDataStore": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/IDisplayObject.ts": {
            "name": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "modules": {},
            "classes": {
                "IDisplayObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/IEventDispatcher.ts": {
            "name": "../src/com/codebelt/structurets/interface/IEventDispatcher.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/ITransition.ts": {
            "name": "../src/com/codebelt/structurets/interface/ITransition.ts",
            "modules": {},
            "classes": {
                "ITransition": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/IValueObject.ts": {
            "name": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "modules": {},
            "classes": {
                "IValueObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/interface/IViewController.ts": {
            "name": "../src/com/codebelt/structurets/interface/IViewController.ts",
            "modules": {},
            "classes": {
                "IViewController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts": {
            "name": "../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts",
            "modules": {},
            "classes": {
                "LanguageConfigVO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/model/Collection.ts": {
            "name": "../src/com/codebelt/structurets/model/Collection.ts",
            "modules": {},
            "classes": {
                "Collection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/model/LanguageModel.ts": {
            "name": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "modules": {},
            "classes": {
                "LanguageModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/model/ValueObject.ts": {
            "name": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "modules": {},
            "classes": {
                "ValueObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/net/NetworkMonitor.ts": {
            "name": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "modules": {},
            "classes": {
                "NetworkMonitor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/net/URLContentType.ts": {
            "name": "../src/com/codebelt/structurets/net/URLContentType.ts",
            "modules": {},
            "classes": {
                "URLContentType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/net/URLLoader.ts": {
            "name": "../src/com/codebelt/structurets/net/URLLoader.ts",
            "modules": {},
            "classes": {
                "URLLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/net/URLLoaderDataFormat.ts": {
            "name": "../src/com/codebelt/structurets/net/URLLoaderDataFormat.ts",
            "modules": {},
            "classes": {
                "URLLoaderDataFormat": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/net/URLRequest.ts": {
            "name": "../src/com/codebelt/structurets/net/URLRequest.ts",
            "modules": {},
            "classes": {
                "URLRequest": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/net/URLRequestMethod.ts": {
            "name": "../src/com/codebelt/structurets/net/URLRequestMethod.ts",
            "modules": {},
            "classes": {
                "URLRequestMethod": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts": {
            "name": "../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/request/BaseRequest.ts": {
            "name": "../src/com/codebelt/structurets/request/BaseRequest.ts",
            "modules": {},
            "classes": {
                "BaseRequest": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/request/JsonRequest.ts": {
            "name": "../src/com/codebelt/structurets/request/JsonRequest.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/AssetLoader.ts": {
            "name": "../src/com/codebelt/structurets/util/AssetLoader.ts",
            "modules": {},
            "classes": {
                "AssetLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/BrowserUtils.ts": {
            "name": "../src/com/codebelt/structurets/util/BrowserUtils.ts",
            "modules": {},
            "classes": {
                "BrowserUtils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/DataLoader.ts": {
            "name": "../src/com/codebelt/structurets/util/DataLoader.ts",
            "modules": {},
            "classes": {
                "DataLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/DateUtil.ts": {
            "name": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "modules": {},
            "classes": {
                "DateUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/HtmlLoader.ts": {
            "name": "../src/com/codebelt/structurets/util/HtmlLoader.ts",
            "modules": {},
            "classes": {
                "HtmlLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/ImageLoader.ts": {
            "name": "../src/com/codebelt/structurets/util/ImageLoader.ts",
            "modules": {},
            "classes": {
                "ImageLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/MathUtil.ts": {
            "name": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "modules": {},
            "classes": {
                "MathUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/MerchantUtil.ts": {
            "name": "../src/com/codebelt/structurets/util/MerchantUtil.ts",
            "modules": {},
            "classes": {
                "MerchantUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/MobileUtil.ts": {
            "name": "../src/com/codebelt/structurets/util/MobileUtil.ts",
            "modules": {},
            "classes": {
                "MobileUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/NumberUtil.ts": {
            "name": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "modules": {},
            "classes": {
                "NumberUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/StringUtil.ts": {
            "name": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "modules": {},
            "classes": {
                "StringUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/TemplateFactory.ts": {
            "name": "../src/com/codebelt/structurets/util/TemplateFactory.ts",
            "modules": {},
            "classes": {
                "TemplateFactory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/Timer.ts": {
            "name": "../src/com/codebelt/structurets/util/Timer.ts",
            "modules": {},
            "classes": {
                "Timer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/TransitionFactory.ts": {
            "name": "../src/com/codebelt/structurets/util/TransitionFactory.ts",
            "modules": {},
            "classes": {
                "TransitionFactory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/Util.ts": {
            "name": "../src/com/codebelt/structurets/util/Util.ts",
            "modules": {},
            "classes": {
                "Util": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/ValidationUtil.ts": {
            "name": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "modules": {},
            "classes": {
                "ValidationUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/util/XML.ts": {
            "name": "../src/com/codebelt/structurets/util/XML.ts",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../src/com/codebelt/structurets/BaseObject.ts": {
            "name": "../src/com/codebelt/structurets/BaseObject.ts",
            "modules": {},
            "classes": {
                "BaseObject": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "StructureTS": {
            "name": "StructureTS",
            "submodules": {
                "controller": 1,
                "view": 1,
                "nativeEvent": 1,
                "event": 1,
                "interface": 1,
                "model": 1,
                "net": 1,
                "util": 1,
                "core": 1
            },
            "classes": {
                "CarouselComponent": 1,
                "TabComponent": 1,
                "TransitionType": 1,
                "BaseTransition": 1,
                "TransitionCrossFade": 1,
                "TransitionFadeOutAndIn": 1,
                "TransitionNone": 1,
                "TransitionPushDown": 1,
                "TransitionPushLeft": 1,
                "TransitionPushRight": 1,
                "TransitionPushUp": 1,
                "BaseViewController": 1,
                "ApplicationCacheController": 1,
                "BaseController": 1,
                "LocalStorageController": 1,
                "RouterController": 1,
                "TransitionManager": 1,
                "UndoManager": 1,
                "Bitmap": 1,
                "Canvas": 1,
                "CanvasElement": 1,
                "DOMElement": 1,
                "DisplayObjectContainer": 1,
                "Stage": 1,
                "MouseEvents": 1,
                "NavigatorEvents": 1,
                "WindowEvents": 1,
                "ApplicationCacheEvent": 1,
                "BaseEvent": 1,
                "CarouselEvent": 1,
                "EventBroker": 1,
                "EventDispatcher": 1,
                "LanguageEvent": 1,
                "LoaderEvent": 1,
                "LocalStorageEvent": 1,
                "NetworkMonitorEvent": 1,
                "RequestEvent": 1,
                "RouterEvent": 1,
                "TimerEvent": 1,
                "TransitionManagerEvent": 1,
                "TweenEvent": 1,
                "ICollection": 1,
                "ICore": 1,
                "IDOMElement": 1,
                "IDataStore": 1,
                "IDisplayObject": 1,
                "IValueObject": 1,
                "ITransition": 1,
                "IViewController": 1,
                "LanguageConfigVO": 1,
                "Collection": 1,
                "LanguageModel": 1,
                "ValueObject": 1,
                "NetworkMonitor": 1,
                "URLContentType": 1,
                "URLLoader": 1,
                "URLLoaderDataFormat": 1,
                "URLRequest": 1,
                "URLRequestMethod": 1,
                "BaseRequest": 1,
                "AssetLoader": 1,
                "BrowserUtils": 1,
                "DataLoader": 1,
                "DateUtil": 1,
                "HtmlLoader": 1,
                "ImageLoader": 1,
                "MathUtil": 1,
                "MerchantUtil": 1,
                "MobileUtil": 1,
                "NumberUtil": 1,
                "StringUtil": 1,
                "TemplateFactory": 1,
                "Timer": 1,
                "TransitionFactory": 1,
                "Util": 1,
                "ValidationUtil": 1,
                "BaseObject": 1
            },
            "fors": {},
            "namespaces": {},
            "file": "../src/com/codebelt/structurets/BaseObject.ts",
            "line": 36
        },
        "controller": {
            "name": "controller",
            "submodules": {},
            "classes": {
                "BaseTransition": 1,
                "TransitionCrossFade": 1,
                "TransitionFadeOutAndIn": 1,
                "TransitionNone": 1,
                "TransitionPushDown": 1,
                "TransitionPushLeft": 1,
                "TransitionPushRight": 1,
                "TransitionPushUp": 1,
                "BaseViewController": 1,
                "ApplicationCacheController": 1,
                "BaseController": 1,
                "LocalStorageController": 1,
                "RouterController": 1,
                "UndoManager": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "YUIDoc_comment",
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 29
        },
        "view": {
            "name": "view",
            "submodules": {},
            "classes": {
                "Bitmap": 1,
                "Canvas": 1,
                "CanvasElement": 1,
                "DOMElement": 1,
                "DisplayObjectContainer": 1,
                "Stage": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "The Bitmap...",
            "file": "../src/com/codebelt/structurets/display/Stage.ts",
            "line": 29
        },
        "nativeEvent": {
            "name": "nativeEvent",
            "submodules": {},
            "classes": {
                "MouseEvents": 1,
                "NavigatorEvents": 1,
                "WindowEvents": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "The MouseEvents...",
            "file": "../src/com/codebelt/structurets/event/native/WindowEvents.ts",
            "line": 27
        },
        "event": {
            "name": "event",
            "submodules": {},
            "classes": {
                "ApplicationCacheEvent": 1,
                "BaseEvent": 1,
                "CarouselEvent": 1,
                "EventBroker": 1,
                "EventDispatcher": 1,
                "LanguageEvent": 1,
                "LoaderEvent": 1,
                "LocalStorageEvent": 1,
                "NetworkMonitorEvent": 1,
                "RequestEvent": 1,
                "RouterEvent": 1,
                "TimerEvent": 1,
                "TransitionManagerEvent": 1,
                "TweenEvent": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "The ApplicationCacheEvent ....",
            "file": "../src/com/codebelt/structurets/event/TweenEvent.ts",
            "line": 5
        },
        "interface": {
            "name": "interface",
            "submodules": {},
            "classes": {
                "ICollection": 1,
                "ICore": 1,
                "IDOMElement": 1,
                "IDataStore": 1,
                "IDisplayObject": 1,
                "IValueObject": 1,
                "IViewController": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "YUIDoc_comment",
            "file": "../src/com/codebelt/structurets/interface/IViewController.ts",
            "line": 29
        },
        "model": {
            "name": "model",
            "submodules": {},
            "classes": {
                "Collection": 1,
                "LanguageModel": 1,
                "ValueObject": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "YUIDoc_comment",
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 31
        },
        "net": {
            "name": "net",
            "submodules": {},
            "classes": {
                "URLContentType": 1,
                "URLLoader": 1,
                "URLLoaderDataFormat": 1,
                "URLRequest": 1,
                "URLRequestMethod": 1,
                "BaseRequest": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "The URLContentType...",
            "file": "../src/com/codebelt/structurets/request/BaseRequest.ts",
            "line": 33
        },
        "util": {
            "name": "util",
            "submodules": {},
            "classes": {
                "AssetLoader": 1,
                "BrowserUtils": 1,
                "DataLoader": 1,
                "DateUtil": 1,
                "HtmlLoader": 1,
                "ImageLoader": 1,
                "MathUtil": 1,
                "MerchantUtil": 1,
                "MobileUtil": 1,
                "NumberUtil": 1,
                "StringUtil": 1,
                "TemplateFactory": 1,
                "Timer": 1,
                "TransitionFactory": 1,
                "Util": 1,
                "ValidationUtil": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "The AssetLoader...",
            "file": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "line": 27
        },
        "core": {
            "name": "core",
            "submodules": {},
            "classes": {
                "BaseObject": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "StructureTS",
            "namespace": "",
            "description": "The {{#crossLink \"BaseObject\"}}{{/crossLink}} class is an abstract class that provides common properties and functionality for all StructureTS classes.",
            "file": "../src/com/codebelt/structurets/BaseObject.ts",
            "line": 36
        }
    },
    "classes": {
        "CarouselComponent": {
            "name": "CarouselComponent",
            "shortname": "CarouselComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TabComponent": {
            "name": "TabComponent",
            "shortname": "TabComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 33,
            "description": "YUIDoc_comment",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionType": {
            "name": "TransitionType",
            "shortname": "TransitionType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "file": "../src/com/codebelt/structurets/constant/TransitionType.ts",
            "line": 27,
            "description": "YUIDoc_comment",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "BaseTransition": {
            "name": "BaseTransition",
            "shortname": "BaseTransition",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 34,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionCrossFade": {
            "name": "TransitionCrossFade",
            "shortname": "TransitionCrossFade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "BaseTransition",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionFadeOutAndIn": {
            "name": "TransitionFadeOutAndIn",
            "shortname": "TransitionFadeOutAndIn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "BaseTransition",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionNone": {
            "name": "TransitionNone",
            "shortname": "TransitionNone",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionNone.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "BaseTransition",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionPushDown": {
            "name": "TransitionPushDown",
            "shortname": "TransitionPushDown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "BaseTransition",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionPushLeft": {
            "name": "TransitionPushLeft",
            "shortname": "TransitionPushLeft",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "BaseTransition",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionPushRight": {
            "name": "TransitionPushRight",
            "shortname": "TransitionPushRight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "BaseTransition",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionPushUp": {
            "name": "TransitionPushUp",
            "shortname": "TransitionPushUp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "controller",
            "extends": "BaseTransition",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "BaseViewController": {
            "name": "BaseViewController",
            "shortname": "BaseViewController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts",
            "line": 30,
            "description": "The BaseViewController...",
            "submodule": "controller",
            "extends": "BaseController",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "ApplicationCacheController": {
            "name": "ApplicationCacheController",
            "shortname": "ApplicationCacheController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 30,
            "description": "The ApplicationCacheController...",
            "submodule": "controller",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "BaseController": {
            "name": "BaseController",
            "shortname": "BaseController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/BaseController.ts",
            "line": 29,
            "description": "The BaseController...",
            "submodule": "controller",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "LocalStorageController": {
            "name": "LocalStorageController",
            "shortname": "LocalStorageController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 31,
            "description": "The LocalStorageController...",
            "submodule": "controller",
            "is_constructor": 1,
            "version": "0.1.1"
        },
        "RouterController": {
            "name": "RouterController",
            "shortname": "RouterController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 37,
            "description": "The RouterController...",
            "submodule": "controller",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionManager": {
            "name": "TransitionManager",
            "shortname": "TransitionManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/TransitionManager.ts",
            "line": 35,
            "description": "YUIDoc_comment",
            "extends": "BaseController",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "UndoManager": {
            "name": "UndoManager",
            "shortname": "UndoManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 29,
            "description": "The UndoManager...",
            "submodule": "controller",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "Bitmap": {
            "name": "Bitmap",
            "shortname": "Bitmap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/display/Bitmap.ts",
            "line": 30,
            "description": "The Bitmap...",
            "submodule": "view",
            "extends": "CanvasElement",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "Canvas": {
            "name": "Canvas",
            "shortname": "Canvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/display/Canvas.ts",
            "line": 29,
            "description": "The Canvas...",
            "submodule": "view",
            "extends": "CanvasElement",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "CanvasElement": {
            "name": "CanvasElement",
            "shortname": "CanvasElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/display/CanvasElement.ts",
            "line": 30,
            "description": "The CanvasElement...",
            "submodule": "view",
            "extends": "DisplayObjectContainer",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "DOMElement": {
            "name": "DOMElement",
            "shortname": "DOMElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 32,
            "description": "The {{#crossLink \"DOMElement\"}}{{/crossLink}} class is the base class for all objects that can be placed into the HTML DOM.",
            "submodule": "view",
            "extends": "DisplayObjectContainer",
            "is_constructor": 1,
            "version": "0.1.1"
        },
        "DisplayObjectContainer": {
            "name": "DisplayObjectContainer",
            "shortname": "DisplayObjectContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 29,
            "description": "The {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} class is the base class for all objects that can be placed on the display list.",
            "submodule": "view",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "Stage": {
            "name": "Stage",
            "shortname": "Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/display/Stage.ts",
            "line": 29,
            "description": "The {{#crossLink \"Stage\"}}{{/crossLink}} class should be extended by your main or root class.",
            "example": [
                "\nThis example illustrates how to setup your main or root class when extending the {{#crossLink \"Stage\"}}{{/crossLink}} class.\n\n     class MainClass extends Stage {\n\n         constructor() {\n             super();\n         }\n\n         public createChildren():void {\n             super.createChildren();\n             // Add children classes.\n         }\n\n          public enable():void {\n             if (this.isEnabled === true) return;\n             // Add listeners and/or enable children.\n             super.enable();\n          }\n\n          public disable():void {\n             if (this.isEnabled === false) return;\n             // Remove listeners and/or disable children.\n             super.disable();\n          }\n\n          public destroy():void {\n             super.destroy();\n             // Add items to clean up.\n          }\n\n     }\n\n<b>Instantiation Example</b><br>\nThis example illustrates how to instantiation your main or root class.\n\n     var app = new MainClass();\n     app.appendTo('body');"
            ],
            "submodule": "view",
            "extends": "DOMElement",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "MouseEvents": {
            "name": "MouseEvents",
            "shortname": "MouseEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 27,
            "description": "The MouseEvents...",
            "submodule": "nativeEvent",
            "static": 1,
            "version": "0.1.0"
        },
        "NavigatorEvents": {
            "name": "NavigatorEvents",
            "shortname": "NavigatorEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/native/NavigatorEvents.ts",
            "line": 27,
            "description": "The NavigatorEvents...",
            "submodule": "nativeEvent",
            "static": 1,
            "version": "0.1.0"
        },
        "WindowEvents": {
            "name": "WindowEvents",
            "shortname": "WindowEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/native/WindowEvents.ts",
            "line": 27,
            "description": "YUIDoc_comment",
            "submodule": "nativeEvent",
            "static": 1,
            "version": "0.1.0"
        },
        "ApplicationCacheEvent": {
            "name": "ApplicationCacheEvent",
            "shortname": "ApplicationCacheEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 29,
            "description": "The ApplicationCacheEvent ....",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "BaseEvent": {
            "name": "BaseEvent",
            "shortname": "BaseEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 27,
            "description": "<p>The {{#crossLink \"BaseEvent\"}}{{/crossLink}} class is used as the base class for the creation of Event objects, which are passed as parameters to event listeners when an event occurs.</p>\n\n<p>The properties of the {{#crossLink \"BaseEvent\"}}{{/crossLink}} class carry basic information about an event, such as the event's type or whether the event's default behavior can be canceled.\nFor many events, such as the events represented by the Event class constants, this basic information is sufficient. Other events, however, may require more\ndetailed information.</p>",
            "submodule": "event",
            "example": [
                "\n     // Example: how to create a custom event by extending BaseEvent.\n      class CountryEvent extends BaseEvent {\n         public CLASS_NAME:string = 'CountryEvent';\n\n         public static CHANGE_COUNTRY:string = \"CountryEvent.changeCountry\";\n\n         public countryName:string = null;\n\n         constructor(type:string, countryName:string, bubbles:boolean = false, cancelable:boolean = false, data:any = null) {\n             super(type, bubbles, cancelable, data);\n\n             this.countryName = countryName;\n         }\n     }"
            ],
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "CarouselEvent": {
            "name": "CarouselEvent",
            "shortname": "CarouselEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 5,
            "description": "YUIDoc_comment",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "EventBroker": {
            "name": "EventBroker",
            "shortname": "EventBroker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/EventBroker.ts",
            "line": 29,
            "description": "EventBroker is a simple publish and subscribe static class that you can use to fire and receive notifications.\nLoosely coupled event handling, the subscriber does not have to know the publisher. Both of them only need to know the event type.",
            "submodule": "event",
            "static": 1,
            "version": "0.1.0"
        },
        "EventDispatcher": {
            "name": "EventDispatcher",
            "shortname": "EventDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 30,
            "description": "The EventDispatcher class is the base class for all classes that dispatch events and is the base class for the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} class.\nThe EventDispatcher provides methods for managing prioritized queues of event listeners and dispatching events.",
            "submodule": "event",
            "extends": "BaseObject",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "LanguageEvent": {
            "name": "LanguageEvent",
            "shortname": "LanguageEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/LanguageEvent.ts",
            "line": 29,
            "description": "The LanguageEvent...",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "LoaderEvent": {
            "name": "LoaderEvent",
            "shortname": "LoaderEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/LoaderEvent.ts",
            "line": 29,
            "description": "The LoaderEvent...",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "LocalStorageEvent": {
            "name": "LocalStorageEvent",
            "shortname": "LocalStorageEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "line": 29,
            "description": "The LocalStorageEvent ....\nNote: the event only dispatches in other browser windows and does not show up in the window where you made a change to the local storage.",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "nativeEvent",
                    "description": "The native browser event for localStorage.",
                    "type": "StorageEvent"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "NetworkMonitorEvent": {
            "name": "NetworkMonitorEvent",
            "shortname": "NetworkMonitorEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "line": 29,
            "description": "The NetworkMonitorEvent...",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "RequestEvent": {
            "name": "RequestEvent",
            "shortname": "RequestEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/RequestEvent.ts",
            "line": 29,
            "description": "The RequestEvent...",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "RouterEvent": {
            "name": "RouterEvent",
            "shortname": "RouterEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/RouterEvent.ts",
            "line": 29,
            "description": "The RouterEvent...",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: Bubbling will only work with DisplayObjectContainer classes throw the display list hierarchy. Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "silent",
                    "description": "Indicates whether setting hash value should dispatching changed event within the {{#crossLink \"RouterController\"}}{{/crossLink}}.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TimerEvent": {
            "name": "TimerEvent",
            "shortname": "TimerEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/TimerEvent.ts",
            "line": 29,
            "description": "The TimerEvent...",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionManagerEvent": {
            "name": "TransitionManagerEvent",
            "shortname": "TransitionManagerEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/TransitionManagerEvent.ts",
            "line": 29,
            "description": "The TransitionManagerEvent...",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TweenEvent": {
            "name": "TweenEvent",
            "shortname": "TweenEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/event/TweenEvent.ts",
            "line": 5,
            "description": "YUIDoc_comment",
            "submodule": "event",
            "extends": "BaseEvent",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event. The type is case-sensitive.",
                    "type": "String"
                },
                {
                    "name": "bubbles",
                    "description": "Indicates whether an event is a bubbling event. If the event can bubble, this value is true; otherwise it is false.\nNote: With event-bubbling you can let one Event subsequently call on every ancestor ({{#crossLink \"EventDispatcher/parent:property\"}}{{/crossLink}})\n(containers of containers of etc.) of the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that originally dispatched the Event, all the way up to the surface ({{#crossLink \"Stage\"}}{{/crossLink}}). Any classes that do not have a parent cannot bubble.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cancelable",
                    "description": "Indicates whether the behavior associated with the event can be prevented. If the behavior can be canceled, this value is true; otherwise it is false.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "Use to pass any type of data with the event.",
                    "type": "Any",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "ICollection": {
            "name": "ICollection",
            "shortname": "ICollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 29,
            "description": "YUIDoc_comment",
            "submodule": "interface",
            "interface": "",
            "version": "0.2.0"
        },
        "ICore": {
            "name": "ICore",
            "shortname": "ICore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/ICore.ts",
            "line": 27,
            "description": "YUIDoc_comment",
            "submodule": "interface",
            "interface": "",
            "version": "0.1.0"
        },
        "IDOMElement": {
            "name": "IDOMElement",
            "shortname": "IDOMElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/IDOMElement.ts",
            "line": 29,
            "description": "YUIDoc_comment",
            "submodule": "interface",
            "interface": "",
            "version": "0.1.0"
        },
        "IDataStore": {
            "name": "IDataStore",
            "shortname": "IDataStore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/IDataStore.ts",
            "line": 29,
            "description": "YUIDoc_comment",
            "submodule": "interface",
            "extends": "IEventDispatcher",
            "interface": "",
            "version": "0.1.0"
        },
        "IDisplayObject": {
            "name": "IDisplayObject",
            "shortname": "IDisplayObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 29,
            "description": "YUIDoc_comment",
            "submodule": "interface",
            "interface": "",
            "version": "0.1.0"
        },
        "IValueObject": {
            "name": "IValueObject",
            "shortname": "IValueObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "line": 27,
            "description": "YUIDoc_comment",
            "submodule": "interface",
            "extends": "ICore",
            "interface": "",
            "version": "0.1.0"
        },
        "ITransition": {
            "name": "ITransition",
            "shortname": "ITransition",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/ITransition.ts",
            "line": 31,
            "description": "YUIDoc_comment",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "IViewController": {
            "name": "IViewController",
            "shortname": "IViewController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/interface/IViewController.ts",
            "line": 29,
            "description": "YUIDoc_comment",
            "submodule": "interface",
            "interface": "",
            "version": "0.1.0"
        },
        "LanguageConfigVO": {
            "name": "LanguageConfigVO",
            "shortname": "LanguageConfigVO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts",
            "line": 29,
            "description": "YUIDoc_comment",
            "params": [
                {
                    "name": "data",
                    "description": "Provide a way to update the value object upon initialization.",
                    "type": "Any",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "Collection": {
            "name": "Collection",
            "shortname": "Collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 32,
            "description": "YUIDoc_comment",
            "submodule": "model",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "version": "0.2.0"
        },
        "LanguageModel": {
            "name": "LanguageModel",
            "shortname": "LanguageModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 35,
            "description": "The LanguageModel...",
            "submodule": "model",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "ValueObject": {
            "name": "ValueObject",
            "shortname": "ValueObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 31,
            "description": "Value Object (VO) is a design pattern used to transfer data between software application subsystems.",
            "submodule": "model",
            "params": [
                {
                    "name": "data",
                    "description": "Provide a way to update the value object upon initialization.",
                    "type": "Any",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "NetworkMonitor": {
            "name": "NetworkMonitor",
            "shortname": "NetworkMonitor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 7,
            "description": "YUIDoc_comment",
            "is_constructor": 1,
            "static": 1,
            "version": "0.1.0"
        },
        "URLContentType": {
            "name": "URLContentType",
            "shortname": "URLContentType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/net/URLContentType.ts",
            "line": 29,
            "description": "The URLContentType...",
            "submodule": "net",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "URLLoader": {
            "name": "URLLoader",
            "shortname": "URLLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/net/URLLoader.ts",
            "line": 32,
            "description": "The URLLoader...",
            "submodule": "net",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "URLLoaderDataFormat": {
            "name": "URLLoaderDataFormat",
            "shortname": "URLLoaderDataFormat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/net/URLLoaderDataFormat.ts",
            "line": 29,
            "description": "The URLLoaderDataFormat...",
            "submodule": "net",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "URLRequest": {
            "name": "URLRequest",
            "shortname": "URLRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/net/URLRequest.ts",
            "line": 31,
            "description": "The URLRequest class captures all of the information in a single HTTP request.\nURLRequest objects are passed to the load() methods of the {{#crossLink \"URLLoader\"}}{{/crossLink}} classes.",
            "submodule": "net",
            "extends": "BaseObject",
            "params": [
                {
                    "name": "url",
                    "description": "[string=null] The URL to be requested. You can set the URL later by using the url property."
                }
            ],
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "URLRequestMethod": {
            "name": "URLRequestMethod",
            "shortname": "URLRequestMethod",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/net/URLRequestMethod.ts",
            "line": 27,
            "description": "The URLRequestMethod...",
            "submodule": "net",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "BaseRequest": {
            "name": "BaseRequest",
            "shortname": "BaseRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/request/BaseRequest.ts",
            "line": 33,
            "description": "The BaseRequest...",
            "submodule": "net",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "AssetLoader": {
            "name": "AssetLoader",
            "shortname": "AssetLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/AssetLoader.ts",
            "line": 31,
            "description": "The AssetLoader...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "BrowserUtils": {
            "name": "BrowserUtils",
            "shortname": "BrowserUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/BrowserUtils.ts",
            "line": 27,
            "description": "The BrowserUtils...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "DataLoader": {
            "name": "DataLoader",
            "shortname": "DataLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/DataLoader.ts",
            "line": 29,
            "description": "The DataLoader...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "DateUtil": {
            "name": "DateUtil",
            "shortname": "DateUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "line": 29,
            "description": "The DateUtil...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "HtmlLoader": {
            "name": "HtmlLoader",
            "shortname": "HtmlLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/HtmlLoader.ts",
            "line": 34,
            "description": "The HtmlLoader...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "ImageLoader": {
            "name": "ImageLoader",
            "shortname": "ImageLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/ImageLoader.ts",
            "line": 31,
            "description": "The ImageLoader...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "MathUtil": {
            "name": "MathUtil",
            "shortname": "MathUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 29,
            "description": "The MathUtil...",
            "submodule": "util",
            "is_constructor": 1,
            "static": 1,
            "version": "0.1.0"
        },
        "MerchantUtil": {
            "name": "MerchantUtil",
            "shortname": "MerchantUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/MerchantUtil.ts",
            "line": 27,
            "description": "A MerchantUtility class that has several static methods to assist in development.",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "MobileUtil": {
            "name": "MobileUtil",
            "shortname": "MobileUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/MobileUtil.ts",
            "line": 27,
            "description": "The MobileUtil...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "NumberUtil": {
            "name": "NumberUtil",
            "shortname": "NumberUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 29,
            "description": "The NumberUtil...",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "StringUtil": {
            "name": "StringUtil",
            "shortname": "StringUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 29,
            "description": "The StringUtil...",
            "submodule": "util",
            "is_constructor": 1,
            "static": 1,
            "version": "0.1.0"
        },
        "TemplateFactory": {
            "name": "TemplateFactory",
            "shortname": "TemplateFactory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/TemplateFactory.ts",
            "line": 30,
            "description": "YUIDoc_comment",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "Timer": {
            "name": "Timer",
            "shortname": "Timer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 30,
            "description": "Constructs a new Timer object with the specified delay and repeatCount states.",
            "submodule": "util",
            "extends": "EventDispatcher",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "TransitionFactory": {
            "name": "TransitionFactory",
            "shortname": "TransitionFactory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/TransitionFactory.ts",
            "line": 40,
            "description": "YUIDoc_comment",
            "submodule": "util",
            "extends": "BaseObject",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "Util": {
            "name": "Util",
            "shortname": "Util",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/Util.ts",
            "line": 27,
            "description": "A Utility class that has several static methods to assist in development.",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "ValidationUtil": {
            "name": "ValidationUtil",
            "shortname": "ValidationUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "line": 27,
            "description": "A ValidationUtility class that has several static methods to assist in development.",
            "submodule": "util",
            "is_constructor": 1,
            "version": "0.1.0"
        },
        "BaseObject": {
            "name": "BaseObject",
            "shortname": "BaseObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "StructureTS",
            "namespace": "",
            "file": "../src/com/codebelt/structurets/BaseObject.ts",
            "line": 36,
            "description": "The {{#crossLink \"BaseObject\"}}{{/crossLink}} class is an abstract class that provides common properties and functionality for all StructureTS classes.",
            "submodule": "core",
            "is_constructor": 1,
            "version": "0.1.0"
        }
    },
    "classitems": [
        {
            "file": "../src/com/codebelt/structurets/_declare/jquery.d.ts",
            "line": 201,
            "description": "AJAX",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/jquery.d.ts",
            "line": 340,
            "description": "Parses a string into an array of DOM nodes.",
            "params": [
                {
                    "name": "data",
                    "description": "HTML string to be parsed"
                },
                {
                    "name": "context",
                    "description": "DOM element to serve as the context in which the HTML fragment will be created"
                },
                {
                    "name": "keepScripts",
                    "description": "A Boolean indicating whether to include scripts passed in the HTML string"
                }
            ],
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 37,
            "description": "Collections",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 103,
            "description": "Arrays",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 151,
            "description": "Functions",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 167,
            "description": "Objects",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 203,
            "description": "Utility",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 218,
            "description": "Chaining",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 279,
            "description": "Arrays",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 317,
            "description": "Functions",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 333,
            "description": "Objects",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 368,
            "description": "Utility",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/_declare/underscore.d.ts",
            "line": 380,
            "description": "Chaining",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 42,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 81,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "update",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 94,
            "itemtype": "method",
            "name": "transitionTo",
            "access": "private",
            "tagname": "",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 116,
            "itemtype": "method",
            "name": "transition",
            "access": "protected",
            "tagname": "",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 169,
            "itemtype": "method",
            "name": "transitionTo",
            "access": "private",
            "tagname": "",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 198,
            "itemtype": "method",
            "name": "transitionTo",
            "access": "private",
            "tagname": "",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 225,
            "itemtype": "method",
            "name": "transitionTo",
            "access": "private",
            "tagname": "",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 238,
            "itemtype": "method",
            "name": "transitionTo",
            "access": "private",
            "tagname": "",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 262,
            "itemtype": "method",
            "name": "onTweenProgress",
            "access": "private",
            "tagname": "",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 272,
            "itemtype": "method",
            "name": "prev",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 284,
            "itemtype": "method",
            "name": "next",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 296,
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 309,
            "itemtype": "method",
            "name": "play",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/CarouselComponent.ts",
            "line": 320,
            "itemtype": "method",
            "name": "transitionTo",
            "class": "CarouselComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 46,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_$container",
            "type": "{JQuery}",
            "access": "private",
            "tagname": "",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 55,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_tabButtonAttributeName",
            "type": "{string}",
            "access": "private",
            "tagname": "",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 64,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_$tabButtons",
            "type": "{JQuery}",
            "access": "private",
            "tagname": "",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 73,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_tabContentAttributeName",
            "type": "{string}",
            "access": "private",
            "tagname": "",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 82,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_$tabContent",
            "type": "{JQuery}",
            "access": "private",
            "tagname": "",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 91,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "activeClassName",
            "type": "{string}",
            "access": "public",
            "tagname": "",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 112,
            "overridden": "BaseObject.enable",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 124,
            "overridden": "BaseObject.disable",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/component/TabComponent.ts",
            "line": 136,
            "overridden": "EventDispatcher.destroy",
            "class": "TabComponent"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 46,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 51,
            "description": "Property of the TimelineMax object.",
            "itemtype": "property",
            "name": "transition",
            "type": "{TimelineMax}",
            "readonly": "",
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 65,
            "description": "Creates and starts the transition for the specific transition type.",
            "itemtype": "method",
            "name": "createTransition",
            "params": [
                {
                    "name": "transitionType",
                    "description": "{string)"
                },
                {
                    "name": "viewContainer",
                    "description": "{DisplayObjectContainer)"
                },
                {
                    "name": "currentView",
                    "description": "{DOMElement)"
                },
                {
                    "name": "nextView",
                    "description": "{DOMElement)"
                },
                {
                    "name": "duration",
                    "description": "{number)",
                    "optional": true,
                    "optdefault": "0.75"
                }
            ],
            "return": {
                "description": "",
                "type": "ITransition"
            },
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 81,
            "description": "Gets called by the TimelineMax object when the transition starts. Dispatches the TweenEvent.START event. The data value of the TweenEvent event is set to the TimelineMax object.",
            "itemtype": "method",
            "name": "onTweenStart",
            "return": {
                "description": "",
                "type": "BaseTransition"
            },
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 96,
            "description": "Gets called by the TimelineMax object every time the timeline updates (on every frame while the timeline is active). Dispatches the TweenEvent.START event. The data value of the TweenEvent event is set to the TimelineMax object.",
            "itemtype": "method",
            "name": "onTweenUpdate",
            "return": {
                "description": "",
                "type": "BaseTransition"
            },
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 111,
            "description": "Gets called by the TimelineMax object when the transition completes. Dispatches the TweenEvent.COMPLETE event. The data value of the TweenEvent event is set to the TimelineMax object.",
            "itemtype": "method",
            "name": "onTweenComplete",
            "return": {
                "description": "",
                "type": "BaseTransition"
            },
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 126,
            "description": "Tells TimelineMax to finishes/complete the transition right away.",
            "itemtype": "method",
            "name": "complete",
            "return": {
                "description": "",
                "type": "BaseTransition"
            },
            "chainable": 1,
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/BaseTransition.ts",
            "line": 140,
            "overridden": "EventDispatcher.destroy",
            "class": "BaseTransition",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionCrossFade",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts",
            "line": 71,
            "overridden": "EventDispatcher.destroy",
            "class": "TransitionCrossFade",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionFadeOutAndIn",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts",
            "line": 71,
            "overridden": "EventDispatcher.destroy",
            "class": "TransitionFadeOutAndIn",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionNone.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionNone",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionNone.ts",
            "line": 54,
            "overridden": "BaseTransition.createTransition",
            "class": "TransitionNone",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionNone.ts",
            "line": 71,
            "overridden": "BaseTransition.destroy",
            "class": "TransitionNone",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionPushDown",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts",
            "line": 71,
            "overridden": "EventDispatcher.destroy",
            "class": "TransitionPushDown",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionPushLeft",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts",
            "line": 74,
            "overridden": "EventDispatcher.destroy",
            "class": "TransitionPushLeft",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionPushRight",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts",
            "line": 74,
            "overridden": "EventDispatcher.destroy",
            "class": "TransitionPushRight",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionPushUp",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts",
            "line": 71,
            "overridden": "EventDispatcher.destroy",
            "class": "TransitionPushUp",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts",
            "line": 42,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "BaseViewController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts",
            "line": 58,
            "description": "Sets the browser title.",
            "itemtype": "method",
            "name": "setPageTitle",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "BaseViewController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 41,
            "overridden": "EventDispatcher.CLASS_NAME",
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 46,
            "itemtype": "property",
            "name": "_appCache",
            "type": "{ApplicationCache}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 55,
            "itemtype": "property",
            "name": "_eventDispatcher",
            "type": "{EventDispatcher}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 64,
            "description": "The isEnabled property is used to keep track of the enabled state.",
            "itemtype": "property",
            "name": "isEnabled",
            "type": "{boolean}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 79,
            "overridden": "BaseObject.enable",
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 99,
            "overridden": "BaseObject.disable",
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 151,
            "description": "The resources listed in the manifest have been fully downloaded, and the application is\nnow cached locally.",
            "itemtype": "method",
            "name": "onCached",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 166,
            "description": "The browser is checking for an update, or is attempting to download\nthe cache manifest for the first time. This is always the first event\nin the sequence.",
            "itemtype": "method",
            "name": "onChecking",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 182,
            "description": "The browser has started to download the cache manifest, either for the\nfirst time or because changes have been detected.",
            "itemtype": "method",
            "name": "onDownloading",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 197,
            "description": "An error occurred at some point - this could be caused by a number of things. This will\nalways be the last event in the sequence.",
            "itemtype": "method",
            "name": "onError",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 212,
            "description": "The cache manifest hadn't changed.",
            "itemtype": "method",
            "name": "onNoUpdate",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 226,
            "description": "The cache manifest file could not be found, indicating that the cache is no longer needed.\nThe application cache is being deleted.",
            "itemtype": "method",
            "name": "onObsolete",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 241,
            "description": "The browser had downloaded and cached an asset. This is fired once for\nevery file that is downloaded (including the current page which is cached implicitly).",
            "itemtype": "method",
            "name": "onProgress",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 256,
            "description": "The resources listed in the manifest have been newly re-downloaded, and the script can\nuse swapCache() to switch to the new cache.",
            "itemtype": "method",
            "name": "onUpdateReady",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event from the DOMApplicationCache.",
                    "type": "DOMApplicationCacheEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 271,
            "description": "Registers an event listener object with an ApplicationCacheController object so that the listener receives notification of an event.",
            "example": [
                "\n     ApplicationCacheController.addEventListener(BaseEvent.CHANGE, handlerMethod, this);\n     private handlerMethod(event:BaseEvent):void {\n         console.log(event.target + \" sent the event.\");\n     }"
            ],
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener function that processes the event. This function must accept an Event object as its only parameter and must return nothing, as this example shows. @example function(event:Event):void",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Binds the scope to a particular object (scope is basically what \"this\" refers to in your function). This can be very useful in JavaScript because scope isn't generally maintained.",
                    "type": "Any"
                },
                {
                    "name": "priority",
                    "description": "Influences the order in which the listeners are called. Listeners with lower priorities are called after ones with higher priorities.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 290,
            "description": "Removes a specified listener from the ApplicationCacheController object.",
            "example": [
                "\n     ApplicationCacheController.removeEventListener(BaseEvent.CHANGE, handlerMethod, this);\n     private handlerMethod(event:BaseEvent):void {\n         console.log(event.target + \" sent the event.\");\n     }"
            ],
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener object to remove.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope of the listener object to be removed. This was added because it was need for the {{#crossLink \"ApplicationCacheController\"}}{{/crossLink}} class.\nTo keep things consistent this parameter is required.",
                    "type": "Any"
                }
            ],
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/ApplicationCacheController.ts",
            "line": 309,
            "description": "<p>Dispatches an event within the ApplicationCacheController object.</p>",
            "example": [
                "\n     var event:BaseEvent = new BaseEvent(BaseEvent.CHANGE);\n     ApplicationCacheController.dispatchEvent(event);\n\n     // Here is a common inline event being dispatched\n     ApplicationCacheController.dispatchEvent(new BaseEvent(BaseEvent.CHANGE));"
            ],
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The Event object that is dispatched into the event flow. You can create custom events, the only requirement is all events must\nextend the {{#crossLink \"BaseEvent\"}}{{/crossLink}}.",
                    "type": "BaseEvent"
                }
            ],
            "static": 1,
            "class": "ApplicationCacheController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/BaseController.ts",
            "line": 41,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "BaseController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 42,
            "overridden": "EventDispatcher.CLASS_NAME",
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 47,
            "description": "Current user namespace. The namespace is optional.",
            "itemtype": "property",
            "name": "_namespace",
            "type": "{string}",
            "default": "defaultNamespace",
            "optional": 1,
            "access": "private",
            "tagname": "",
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 58,
            "description": "A reference to window.localStorage for faster access.",
            "itemtype": "property",
            "name": "_localStorage",
            "type": "{Storage}",
            "access": "private",
            "tagname": "",
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 76,
            "description": "Set storage namespace",
            "itemtype": "method",
            "name": "setNamespace",
            "params": [
                {
                    "name": "namespace",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 88,
            "description": "Get storage namespace",
            "itemtype": "method",
            "name": "getNamespace",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 99,
            "description": "Add a key/value pair to localStorage.",
            "itemtype": "method",
            "name": "addItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "useNamespace",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 124,
            "description": "Retrieves the current value associated with the Local Storage key.",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "useNamespace",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 156,
            "description": "Returns all items in local storage as an Object with key and value properties that has a certain namespace.",
            "itemtype": "method",
            "name": "getItemsWithNamespace",
            "params": [
                {
                    "name": "namespace",
                    "description": "The namespace that is used to items. If a namespace is not passed in then the current set namespace will be used.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array.<Object>"
            },
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 184,
            "description": "Returns all items in local storage as an Object with key and value properties.",
            "itemtype": "method",
            "name": "getAllItems",
            "return": {
                "description": "",
                "type": "Array.<Object>"
            },
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 208,
            "description": "Deletes a key/value pair from the Local Storage collection.",
            "itemtype": "method",
            "name": "removeItem",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "useNamespace",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 225,
            "description": "Returns the number of items storage in local storage.",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 236,
            "description": "Returns the size of the Local Storage.",
            "itemtype": "method",
            "name": "getSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 247,
            "description": "Removes all key/value pairs from the Local Storage area.",
            "itemtype": "method",
            "name": "clear",
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 257,
            "overridden": "BaseController.destroy",
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/LocalStorageController.ts",
            "line": 267,
            "itemtype": "method",
            "name": "onLocalStorageEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The native browser event for Web Storage.",
                    "type": "StorageEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "LocalStorageController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 48,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 53,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_crossroads",
            "type": "{Crossroads}",
            "access": "private",
            "tagname": "",
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 75,
            "itemtype": "method",
            "name": "start",
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 100,
            "itemtype": "method",
            "name": "parseHash",
            "params": [
                {
                    "name": "newHash",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "oldHash",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 111,
            "itemtype": "method",
            "name": "navigateTo",
            "params": [
                {
                    "name": "hash",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "silently",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 133,
            "itemtype": "method",
            "name": "getHash",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 143,
            "itemtype": "method",
            "name": "getHashAsArray",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 153,
            "itemtype": "method",
            "name": "getURL",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/RouterController.ts",
            "line": 163,
            "itemtype": "method",
            "name": "getBaseURL",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "RouterController",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/TransitionManager.ts",
            "line": 108,
            "overridden": "BaseController.destroy",
            "class": "TransitionManager",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 40,
            "overridden": "BaseController.CLASS_NAME",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 51,
            "description": "Indicates whether there is currently an operation that can be redone.",
            "itemtype": "method",
            "name": "canRedo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 62,
            "description": "Indicates whether there is currently an operation that can be undone.",
            "itemtype": "method",
            "name": "canUndo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 73,
            "description": "Clears both the undo and the redo histories.",
            "itemtype": "method",
            "name": "clearAll",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 84,
            "description": "Clears the redo stack.",
            "itemtype": "method",
            "name": "clearRedo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 95,
            "description": "Returns the next operation to be redone.",
            "itemtype": "method",
            "name": "peekRedo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 106,
            "description": "Returns the next operation to be undone.",
            "itemtype": "method",
            "name": "peekUndo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 117,
            "description": "Removes the next operation to be redone from the redo stack, and returns it.",
            "itemtype": "method",
            "name": "popRedo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 128,
            "description": "Removes the next operation to be undone from the undo stack, and returns it.",
            "itemtype": "method",
            "name": "popUndo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 139,
            "description": "Adds a redoable operation to the redo stack.",
            "itemtype": "method",
            "name": "adsf",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 150,
            "description": "Adds an undoable operation to the undo stack.",
            "itemtype": "method",
            "name": "pushUndo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 161,
            "description": "Removes the next IOperation object from the redo stack and calls the performRedo() function of that object.",
            "itemtype": "method",
            "name": "redo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/controller/UndoManager.ts",
            "line": 172,
            "description": "Removes the next IOperation object from the undo stack and calls the performUndo() function of that object.",
            "itemtype": "method",
            "name": "undo",
            "access": "public",
            "tagname": "",
            "class": "UndoManager",
            "module": "StructureTS",
            "submodule": "controller"
        },
        {
            "file": "../src/com/codebelt/structurets/display/Bitmap.ts",
            "line": 42,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "Bitmap",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/Canvas.ts",
            "line": 41,
            "overridden": "CanvasElement.CLASS_NAME",
            "class": "Canvas",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/Canvas.ts",
            "line": 79,
            "override": "",
            "class": "Canvas",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/CanvasElement.ts",
            "line": 42,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "CanvasElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 44,
            "overridden": "DisplayObjectContainer.CLASS_NAME",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 49,
            "description": "Whether or not the display object is visible. Display objects that are not visible are disabled.\nFor example, if visible=false for an InteractiveObject instance, it cannot be clicked.",
            "itemtype": "property",
            "name": "_isVisible",
            "type": "{boolean}",
            "default": "true",
            "access": "private",
            "tagname": "",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 60,
            "description": "A cached of the DOM Element.",
            "itemtype": "property",
            "name": "element",
            "type": "{Element}",
            "default": "null",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 69,
            "description": "A cached jQuery object for the view's element.",
            "itemtype": "property",
            "name": "$element",
            "type": "{JQuery}",
            "default": "null",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 78,
            "description": "Holds onto the value passed into the constructor.",
            "itemtype": "property",
            "name": "_type",
            "type": "{string}",
            "default": "null",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 87,
            "description": "Holds onto the value passed into the constructor.",
            "itemtype": "property",
            "name": "_params",
            "type": "{any}",
            "default": "null",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 107,
            "overridden": "DisplayObjectContainer.createChildren",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 134,
            "overridden": "DisplayObjectContainer.addChild",
            "example": [
                "\n     container.addChild(domElementInstance);"
            ],
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The DOMElement instance to add as a child of this object instance.",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DOMElement"
            },
            "chainable": 1,
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 164,
            "description": "Gets called when the child object is added to the DOM.\nThe method will call {{#crossLink \"DOMElement/layoutChildren:method\"}}{{/crossLink}} and dispatch the BaseEvent.ADDED event.",
            "itemtype": "method",
            "name": "onDomAdded",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "JQueryEventObject"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 180,
            "overridden": "DisplayObjectContainer.addChildAt",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 216,
            "overridden": "DisplayObjectContainer.swapChildren",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 230,
            "itemtype": "method",
            "name": "getChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "access": "public",
            "tagname": "",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 242,
            "description": "Gets a DOMElement by its cid.",
            "itemtype": "method",
            "name": "getChildByCid",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "override": "",
            "access": "public",
            "tagname": "",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 261,
            "description": "Returns a DOMElement object with the first found DOM element by the passed in selector.",
            "itemtype": "method",
            "name": "getChild",
            "params": [
                {
                    "name": "selector",
                    "description": "DOM id name, DOM class name or a DOM tag name.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "override": "",
            "access": "public",
            "tagname": "",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 304,
            "description": "Gets all the HTML elements children of this object.",
            "itemtype": "method",
            "name": "getChildren",
            "params": [
                {
                    "name": "selector",
                    "description": "You can pass in any type of jQuery selector. If there is no selector passed in it will get all the children this parent element.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns a list of DOMElement's. It will grab all children HTML DOM elements of this object and will create a DOMElement for each DOM child.\nIf the 'data-cid' property exists is on an HTML element a DOMElement will not be create for that element because it will be assumed it already exists as a DOMElement.",
                "type": "Array"
            },
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 340,
            "description": "Removes the specified child object instance from the child list of the parent object instance.\nThe parent property of the removed child is set to null , and the object is garbage collected if no other references\nto the child exist. The index positions of any objects above the child in the parent object are decreased by 1.",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObjectContainer instance to remove.",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DOMElement"
            },
            "override": "",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 362,
            "description": "Removes all child object instances from the child list of the parent object instance.\nThe parent property of the removed children is set to null , and the objects are garbage collected if no other\nreferences to the children exist.",
            "itemtype": "method",
            "name": "removeChildren",
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DOMElement"
            },
            "override": "",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 382,
            "description": "Indicates the alpha transparency value of the object specified. Valid values are 0 (fully transparent)\nto 1 (fully opaque). The default value is 1. Display objects with alpha set to 0 are active, even though\nthey are invisible.",
            "itemtype": "method",
            "name": "alpha",
            "params": [
                {
                    "name": "number",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DOMElement"
            },
            "chainable": 1,
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 398,
            "itemtype": "method",
            "name": "visible",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DOMElement.ts",
            "line": 423,
            "overridden": "DisplayObjectContainer.destroy",
            "class": "DOMElement",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 41,
            "overridden": "EventDispatcher.CLASS_NAME",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 46,
            "description": "The isCreated property is used to keep track if it is the first time this DisplayObjectContainer is created.",
            "itemtype": "property",
            "name": "isCreated",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 56,
            "description": "Returns the number of children of this object.",
            "itemtype": "property",
            "name": "numChildren",
            "type": "{init}",
            "default": "0",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 67,
            "description": "A reference to the child DisplayObjectContainer instances to this parent object instance.",
            "itemtype": "property",
            "name": "children",
            "type": "{array}",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 77,
            "description": "A property providing access to the width.",
            "itemtype": "property",
            "name": "width",
            "type": "{number}",
            "default": "0",
            "access": "public",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 87,
            "description": "A property providing access to the height.",
            "itemtype": "property",
            "name": "height",
            "type": "{number}",
            "default": "0",
            "access": "public",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 97,
            "description": "A property providing access to the unscaledWidth.",
            "itemtype": "property",
            "name": "unscaledWidth",
            "type": "{number}",
            "default": "100",
            "access": "public",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 107,
            "description": "A property providing access to the unscaledHeight.",
            "itemtype": "property",
            "name": "unscaledHeight",
            "type": "{number}",
            "default": "100",
            "access": "public",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 122,
            "description": "The createChildren function is intended to provide a consistent place for the creation and adding\nof children to the view. It will automatically be called the first time that the view is added\nto another DisplayObjectContainer. It is critical that all subclasses call the super for this function in\ntheir overridden methods.",
            "example": [
                "\n        public createChildren():void {\n           this._childInstance = new DisplayObjectContainer();\n           this.addChild(this._childInstance);\n       }"
            ],
            "itemtype": "method",
            "name": "createChildren",
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 142,
            "description": "Adds a child DisplayObjectContainer instance to this parent object instance. The child is added to the front (top) of all other\nchildren in this parent object instance. (To add a child to a specific index position, use the addChildAt() method.)\n\nIf you add a child object that already has a different parent, the object is removed from the child\nlist of the other parent object.",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObjectContainer instance to add as a child of this DisplayObjectContainerContainer instance.",
                    "type": "DisplayObjectContainer"
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 171,
            "description": "Adds a child DisplayObjectContainer instance to this DisplayObjectContainerContainer instance.\nThe child is added at the index position specified. An index of 0 represents the back\n(bottom) of the display list for this DisplayObjectContainerContainer object.",
            "itemtype": "method",
            "name": "addChildAt",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObjectContainer instance to add as a child of this object instance.",
                    "type": "DisplayObjectContainer"
                },
                {
                    "name": "index",
                    "description": "The index position to which the child is added. If you specify a currently occupied index position, the child object that exists at that position and all higher positions are moved up one position in the child list.",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 199,
            "description": "Swaps two DisplayObjectContainer's with each other.",
            "itemtype": "method",
            "name": "swapChildren",
            "params": [
                {
                    "name": "child1",
                    "description": "The DisplayObjectContainer instance to be swap.",
                    "type": "DisplayObjectContainer"
                },
                {
                    "name": "child2",
                    "description": "The DisplayObjectContainer instance to be swap.",
                    "type": "DisplayObjectContainer"
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 215,
            "overridden": "DisplayObjectContainer.swapChildrenAt",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 233,
            "itemtype": "method",
            "name": "getChildIndex",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "DisplayObjectContainer"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 245,
            "description": "Removes the specified child object instance from the child list of the parent object instance.\nThe parent property of the removed child is set to null , and the object is garbage collected if no other references\nto the child exist. The index positions of any objects above the child in the parent object are decreased by 1.",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "The DisplayObjectContainer instance to remove.",
                    "type": "DisplayObjectContainer"
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 271,
            "description": "Removes all child DisplayObjectContainer instances from the child list of the DisplayObjectContainerContainer instance.\nThe parent property of the removed children is set to null , and the objects are garbage collected if\nno other references to the children exist.",
            "itemtype": "method",
            "name": "removeChildren",
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 293,
            "description": "Returns the child display object instance that exists at the specified index.",
            "itemtype": "method",
            "name": "getChildAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index position of the child object.",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "The child display object at the specified index position.",
                "type": "DisplayObjectContainer"
            },
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 305,
            "description": "The setSize method sets the bounds within which the containing DisplayObjectContainer would\nlike that component to lay itself out. It is expected that calling setSize will automatically\ncall {{#crossLink \"DisplayObjectContainer/layoutChildren:method\"}}{{/crossLink}}.",
            "params": [
                {
                    "name": "unscaledWidth",
                    "description": "The width within which the component should lay itself out.",
                    "type": "Number"
                },
                {
                    "name": "unscaledHeight",
                    "description": "The height within which the component should lay itself out.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 328,
            "description": "The layoutComponent method provides a common function to handle updating child objects.",
            "itemtype": "method",
            "name": "layoutChildren",
            "return": {
                "description": "Returns an instance of itself.",
                "type": "DisplayObjectContainer"
            },
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/DisplayObjectContainer.ts",
            "line": 342,
            "overridden": "EventDispatcher.destroy",
            "class": "DisplayObjectContainer",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/MovieClip.ts",
            "line": 32,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "Stage",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/display/Stage.ts",
            "line": 79,
            "overridden": "DOMElement.CLASS_NAME",
            "class": "Stage",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/display/Stage.ts",
            "line": 89,
            "description": "The selected HTML element where all the child elements will be created. This method also starts the lifecycle of the application.",
            "itemtype": "method",
            "name": "appendTo",
            "params": [
                {
                    "name": "type",
                    "description": "A string value that you want the your code appended too. This can be an element id (#some-id), element class (.some-class) or a element tag (body).",
                    "type": "String"
                },
                {
                    "name": "enabled",
                    "description": "Sets the enabled state of the object.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "chainable": 1,
            "class": "Stage",
            "module": "StructureTS",
            "submodule": "view"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 38,
            "description": "The event occurs when the user clicks on an element.",
            "itemtype": "property",
            "name": "CLICK",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 47,
            "description": "The event occurs when the user double-clicks on an element.",
            "itemtype": "property",
            "name": "DBL_CLICK",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 56,
            "description": "The event occurs when a user presses a mouse button over an element.",
            "itemtype": "property",
            "name": "MOUSE_DOWN",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 65,
            "description": "The event occurs when the pointer is moving while it is over an element.",
            "itemtype": "property",
            "name": "MOUSE_MOVE",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 74,
            "description": "The event occurs when the pointer is moved onto an element.",
            "itemtype": "property",
            "name": "MOUSE_OVER",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 83,
            "description": "The event occurs when a user moves the mouse pointer out of an element.",
            "itemtype": "property",
            "name": "MOUSE_OUT",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 92,
            "description": "The event occurs when a user releases a mouse button over an element",
            "itemtype": "property",
            "name": "MOUSE_UP",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/MouseEvents.ts",
            "line": 101,
            "itemtype": "property",
            "name": "TAP",
            "type": "{string}",
            "static": 1,
            "class": "MouseEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/NavigatorEvents.ts",
            "line": 38,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "ONLINE",
            "type": "{string}",
            "static": 1,
            "class": "NavigatorEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/NavigatorEvents.ts",
            "line": 47,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "OFFLINE",
            "type": "{string}",
            "static": 1,
            "class": "NavigatorEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/native/WindowEvents.ts",
            "line": 38,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "CHANGE",
            "type": "{string}",
            "static": 1,
            "class": "WindowEvents",
            "module": "StructureTS",
            "submodule": "nativeEvent"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 47,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 52,
            "description": "The browser is checking for an update, or is attempting to download\nthe cache manifest for the first time. This is always the first event\nin the sequence.",
            "itemtype": "event",
            "name": "CHECKING",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 63,
            "description": "The cache manifest hadn't changed.",
            "itemtype": "event",
            "name": "NO_UPDATE",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 72,
            "description": "The browser has started to download the cache manifest, either for the\nfirst time or because changes have been detected.",
            "itemtype": "event",
            "name": "DOWNLOADING",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 82,
            "description": "The browser had downloaded and cached an asset. This is fired once for\nevery file that is downloaded (including the current page which is cached implicitly).",
            "itemtype": "event",
            "name": "PROGRESS",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 92,
            "description": "The resources listed in the manifest have been fully downloaded, and the application is\nnow cached locally.",
            "itemtype": "event",
            "name": "CACHED",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 102,
            "description": "The resources listed in the manifest have been newly re-downloaded, and the script can\nuse swapCache() to switch to the new cache.",
            "itemtype": "event",
            "name": "UPDATE_READY",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 112,
            "description": "The cache manifest file could not be found, indicating that the cache is no longer needed.\nThe application cache is being deleted.",
            "itemtype": "event",
            "name": "OBSOLETE",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts",
            "line": 122,
            "description": "An error occurred at some point - this could be caused by a number of things. This will\nalways be the last event in the sequence.",
            "itemtype": "event",
            "name": "ERROR",
            "type": "{string}",
            "static": 1,
            "class": "ApplicationCacheEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 62,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 67,
            "description": "The BaseEvent.ACTIVATE constant defines the value of the type property of an activate event object.",
            "itemtype": "event",
            "name": "ACTIVATE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 76,
            "description": "The BaseEvent.ADDED constant defines the value of the type property of an added event object.",
            "itemtype": "event",
            "name": "ADDED",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 85,
            "description": "The BaseEvent.ADDED_TO_STAGE constant defines the value of the type property of an addedToStage event object.",
            "itemtype": "event",
            "name": "ADDED_TO_STAGE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 94,
            "description": "The BaseEvent.CANCEL constant defines the value of the type property of a cancel event object.",
            "itemtype": "event",
            "name": "CANCEL",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 103,
            "description": "The BaseEvent.CHANGE constant defines the value of the type property of a change event object.",
            "itemtype": "event",
            "name": "CHANGE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 112,
            "description": "The BaseEvent.CLEAR constant defines the value of the type property of a clear event object.",
            "itemtype": "event",
            "name": "CLEAR",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 121,
            "description": "The BaseEvent.CLOSE constant defines the value of the type property of a close event object.",
            "itemtype": "event",
            "name": "CLOSE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 130,
            "description": "The BaseEvent.CLOSING constant defines the value of the type property of a closing event object.",
            "itemtype": "event",
            "name": "CLOSING",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 139,
            "description": "The BaseEvent.COMPLETE constant defines the value of the type property of a complete event object.",
            "itemtype": "event",
            "name": "COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 148,
            "description": "The BaseEvent.CONNECT constant defines the value of the type property of a connect event object.",
            "itemtype": "event",
            "name": "CONNECT",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 157,
            "description": "Defines the value of the type property of a copy event object.",
            "itemtype": "event",
            "name": "COPY",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 166,
            "description": "Defines the value of the type property of a cut event object.",
            "itemtype": "event",
            "name": "CUT",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 175,
            "description": "The BaseEvent.DEACTIVATE constant defines the value of the type property of a deactivate event object.",
            "itemtype": "event",
            "name": "DEACTIVATE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 184,
            "description": "The BaseEvent.DISPLAYING constant defines the value of the type property of a displaying event object.",
            "itemtype": "event",
            "name": "DISPLAYING",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 193,
            "description": "The BaseEvent.ENTER_FRAME constant defines the value of the type property of an enterFrame event object.",
            "itemtype": "event",
            "name": "ENTER_FRAME",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 202,
            "description": "The BaseEvent.EXIT_FRAME constant defines the value of the type property of an exitFrame event object.",
            "itemtype": "event",
            "name": "EXIT_FRAME",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 211,
            "description": "The BaseEvent.EXITING constant defines the value of the type property of an exiting event object.",
            "itemtype": "event",
            "name": "EXITING",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 220,
            "description": "The BaseEvent.FULL_SCREEN constant defines the value of the type property of a fullScreen event object.",
            "itemtype": "event",
            "name": "FULLSCREEN",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 229,
            "description": "The BaseEvent.INIT constant defines the value of the type property of an init event object.",
            "itemtype": "event",
            "name": "INIT",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 238,
            "description": "The BaseEvent.NETWORK_CHANGE constant defines the value of the type property of a networkChange event object.",
            "itemtype": "event",
            "name": "NETWORK_CHANGE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 247,
            "description": "The BaseEvent.OPEN constant defines the value of the type property of an open event object.",
            "itemtype": "event",
            "name": "OPEN",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 256,
            "description": "The BaseEvent.PASTE constant defines the value of the type property of a paste event object.",
            "itemtype": "event",
            "name": "PASTE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 265,
            "description": "The BaseEvent.PREPARING constant defines the value of the type property of a preparing event object.",
            "itemtype": "event",
            "name": "PREPARING",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 274,
            "description": "The BaseEvent.REMOVED constant defines the value of the type property of a removed event object.",
            "itemtype": "event",
            "name": "REMOVED",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 283,
            "description": "The BaseEvent.RENDER constant defines the value of the type property of a render event object.",
            "itemtype": "event",
            "name": "RENDER",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 292,
            "description": "The BaseEvent.RESIZE constant defines the value of the type property of a resize event object.",
            "itemtype": "event",
            "name": "RESIZE",
            "type": "{string}",
            "static": 1,
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 301,
            "description": "The type of event.",
            "itemtype": "property",
            "name": "type",
            "type": "{string}",
            "default": "null",
            "readonly": "",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 311,
            "description": "A reference to the object that originally dispatched the event.",
            "itemtype": "property",
            "name": "target",
            "type": "{any}",
            "default": "null",
            "readonly": "",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 321,
            "description": "The currentTarget property always points to the {{#crossLink \"DisplayObjectContainer\"}}{{/crossLink}} that the event is currently processing (i.e. bubbling at).",
            "itemtype": "property",
            "name": "currentTarget",
            "type": "{any}",
            "default": "null",
            "readonly": "",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 331,
            "description": "Use to pass any type of data with the event.",
            "itemtype": "property",
            "name": "data",
            "type": "{any}",
            "default": "null",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 340,
            "description": "Indicates whether an event is a bubbling event.",
            "itemtype": "property",
            "name": "bubble",
            "type": "{boolean}",
            "default": "false",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 349,
            "description": "Indicates whether the behavior associated with the event can be prevented.",
            "itemtype": "property",
            "name": "cancelable",
            "type": "{boolean}",
            "default": "false",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 358,
            "itemtype": "property",
            "name": "isPropagationStopped",
            "type": "{boolean}",
            "default": "false",
            "readonly": "",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 367,
            "itemtype": "property",
            "name": "isImmediatePropagationStopped",
            "type": "{boolean}",
            "default": "false",
            "readonly": "",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 384,
            "description": "Prevents processing of any event listeners in nodes subsequent to the current node in the event flow.\nThis method does not affect any event listeners in the current node (currentTarget). In contrast, the stopImmediatePropagation()\nmethod prevents processing of event listeners in both the current node and subsequent nodes. Additional calls to this method have no effect.\nThis method can be called in any phase of",
            "itemtype": "method",
            "name": "stopPropagation",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/BaseEvent.ts",
            "line": 397,
            "description": "Prevents processing of any event listeners in the current node and any subsequent nodes in the event flow.\nThis method takes effect immediately, and it affects event listeners in the current node. In contrast, the stopPropagation()\nmethod doesn't take effect until all the event listeners in the current node finish processing.",
            "itemtype": "method",
            "name": "stopImmediatePropagation",
            "class": "BaseEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 23,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 28,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "START",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 37,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "BEGIN",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 46,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "END",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 55,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "NEXT",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 64,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "PREVIOUS",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 73,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "CHANGE",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 82,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "PROGRESS",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/CarouselEvent.ts",
            "line": 91,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "CarouselEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventBroker.ts",
            "line": 41,
            "overridden": "EventDispatcher.CLASS_NAME",
            "class": "EventBroker",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventBroker.ts",
            "line": 46,
            "description": "A reference to the EventDispatcher object.",
            "itemtype": "property",
            "name": "_eventDispatcher",
            "type": "{EventDispatcher}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "EventBroker",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventBroker.ts",
            "line": 61,
            "description": "Registers an event listener object with an EventBroker object so that the listener receives notification of an event.",
            "example": [
                "\n     EventBroker.addEventListener(BaseEvent.CHANGE, this.handlerMethod, this);\n     private handlerMethod(event:BaseEvent):void {\n         console.log(event.target + \" sent the event.\");\n     }"
            ],
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener function that processes the event. This function must accept an Event object as its only parameter and must return nothing, as this example shows. @example function(event:Event):void",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Binds the scope to a particular object (scope is basically what \"this\" refers to in your function). This can be very useful in JavaScript because scope isn't generally maintained.",
                    "type": "Any"
                },
                {
                    "name": "priority",
                    "description": "Influences the order in which the listeners are called. Listeners with lower priorities are called after ones with higher priorities.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "EventBroker",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventBroker.ts",
            "line": 81,
            "description": "Removes a specified listener from the EventBroker object.",
            "example": [
                "\n     EventBroker.removeEventListener(BaseEvent.CHANGE, this.handlerMethod, this);\n     private handlerMethod(event:BaseEvent):void {\n         console.log(event.target + \" sent the event.\");\n     }"
            ],
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener object to remove.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope of the listener object to be removed.\nTo keep things consistent this parameter is required.",
                    "type": "Any"
                }
            ],
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "EventBroker",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventBroker.ts",
            "line": 101,
            "description": "<p>Dispatches an event within the EventBroker object.</p>",
            "example": [
                "\n     var event:BaseEvent = new BaseEvent(BaseEvent.CHANGE);\n     EventBroker.dispatchEvent(event);\n\n     // Here is a common inline event being dispatched\n     EventBroker.dispatchEvent(new BaseEvent(BaseEvent.CHANGE));"
            ],
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The Event object that is dispatched into the event flow. You can create custom events, the only requirement is all events must\nextend the {{#crossLink \"BaseEvent\"}}{{/crossLink}}.",
                    "type": "BaseEvent"
                }
            ],
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "EventBroker",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 43,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 48,
            "description": "Holds a reference to added listeners.",
            "itemtype": "property",
            "name": "_listeners",
            "type": "{array}",
            "access": "private",
            "tagname": "",
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 57,
            "description": "Indicates the object that contains child object. Use the parent property\nto specify a relative path to display objects that are above the current display object in the display\nlist hierarchy.",
            "itemtype": "property",
            "name": "parent",
            "type": "{any}",
            "access": "public",
            "tagname": "",
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 68,
            "description": "The isEnabled property is used to keep track of the enabled state of the object.",
            "itemtype": "property",
            "name": "isEnabled",
            "type": "{boolean}",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 85,
            "description": "Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event.",
            "example": [
                "\n     instance.addEventListener(BaseEvent.CHANGE, this.handlerMethod, this);\n     private handlerMethod(event:BaseEvent):void {\n         console.log(event.target + \" sent the event.\");\n     }"
            ],
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener function that processes the event. This function must accept an Event object as its only parameter and must return nothing, as this example shows. @example function(event:Event):void",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Binds the scope to a particular object (scope is basically what \"this\" refers to in your function). This can be very useful in JavaScript because scope isn't generally maintained.",
                    "type": "Any"
                },
                {
                    "name": "priority",
                    "description": "Influences the order in which the listeners are called. Listeners with lower priorities are called after ones with higher priorities.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 131,
            "description": "Removes a specified listener from the EventDispatcher object.",
            "example": [
                "\n     instance.removeEventListener(BaseEvent.CHANGE, this.handlerMethod, this);\n     private handlerMethod(event:BaseEvent):void {\n         console.log(event.target + \" sent the event.\");\n     }"
            ],
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener object to remove.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope of the listener object to be removed.",
                    "type": "Any"
                }
            ],
            "hide": "This was added because it was need for the {{#crossLink \"EventBroker\"}}{{/crossLink}} class. To keep things consistent this parameter is required.",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 167,
            "description": "<p>Dispatches an event into the event flow. The event target is the EventDispatcher object upon which the dispatchEvent() method is called.</p>",
            "example": [
                "\n     var event:BaseEvent = new BaseEvent(BaseEvent.CHANGE);\n     instance.dispatchEvent(event);\n\n     // Here is a common inline event being dispatched\n     instance.dispatchEvent(new BaseEvent(BaseEvent.CHANGE));"
            ],
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The Event object that is dispatched into the event flow. You can create custom events, the only requirement is all events must\nextend the {{#crossLink \"BaseEvent\"}}{{/crossLink}}.",
                    "type": "BaseEvent"
                }
            ],
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 227,
            "overridden": "CollectiveObject.destroy",
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 240,
            "description": "The enable method is responsible for enabling event listeners and/or children of the containing objects.",
            "example": [
                "\n     public enable():void {\n         if (this.isEnabled === true) return;\n\n         this._childInstance.addEventListener(BaseEvent.CHANGE, this.handlerMethod, this);\n         this._childInstance.enable();\n\n         super.enable();\n     }"
            ],
            "itemtype": "method",
            "name": "enable",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/EventDispatcher.ts",
            "line": 263,
            "description": "The disable method is responsible for disabling event listeners and/or children of the containing objects.",
            "example": [
                "\n     public disable():void {\n         if (this.isEnabled === false) return;\n\n         this._childInstance.removeEventListener(BaseEvent.CHANGE, this.handlerMethod, this);\n         this._childInstance.disable();\n\n         super.enable();\n     }"
            ],
            "itemtype": "method",
            "name": "disable",
            "access": "public",
            "tagname": "",
            "chainable": 1,
            "class": "EventDispatcher",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LanguageEvent.ts",
            "line": 47,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "LanguageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LanguageEvent.ts",
            "line": 52,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "CONFIG_LOADED",
            "type": "{string}",
            "static": 1,
            "class": "LanguageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LanguageEvent.ts",
            "line": 61,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "LOAD_COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "LanguageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LanguageEvent.ts",
            "line": 70,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "LANGUAGE_CHANGE",
            "type": "{string}",
            "static": 1,
            "class": "LanguageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LoaderEvent.ts",
            "line": 47,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "LoaderEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LoaderEvent.ts",
            "line": 52,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "LoaderEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LoaderEvent.ts",
            "line": 61,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "LOAD_COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "LoaderEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "line": 48,
            "overridden": "ValueObject.CLASS_NAME",
            "class": "LocalStorageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "line": 53,
            "description": "The storage event is fired on a Document's Window object when a storage area changes.",
            "itemtype": "event",
            "name": "STORAGE",
            "type": "{string}",
            "static": 1,
            "class": "LocalStorageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "line": 62,
            "description": "The named key that was added, removed, or modified",
            "itemtype": "event",
            "name": "key",
            "type": "{string}",
            "class": "LocalStorageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "line": 70,
            "description": "The previous value (now overwritten), or null if a new item was added",
            "itemtype": "event",
            "name": "oldValue",
            "type": "{string}",
            "class": "LocalStorageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "line": 78,
            "description": "The new value, or null if an item was removed",
            "itemtype": "event",
            "name": "newValue",
            "type": "{string}",
            "class": "LocalStorageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/LocalStorageEvent.ts",
            "line": 86,
            "description": "The page which called a method that triggered this change",
            "itemtype": "event",
            "name": "key",
            "type": "{string}",
            "class": "LocalStorageEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "line": 47,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "NetworkMonitorEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "line": 52,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "STATUS",
            "type": "{string}",
            "static": 1,
            "class": "NetworkMonitorEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "line": 61,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "ONLINE",
            "type": "{string}",
            "static": 1,
            "class": "NetworkMonitorEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "line": 70,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "OFFLINE",
            "type": "{string}",
            "static": 1,
            "class": "NetworkMonitorEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "line": 79,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "status",
            "type": "{string}",
            "access": "public",
            "tagname": "",
            "class": "NetworkMonitorEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts",
            "line": 88,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "connected",
            "type": "{boolean}",
            "access": "public",
            "tagname": "",
            "class": "NetworkMonitorEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/RequestEvent.ts",
            "line": 47,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "RequestEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/RequestEvent.ts",
            "line": 52,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "SUCCESS",
            "type": "{string}",
            "static": 1,
            "class": "RequestEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/RequestEvent.ts",
            "line": 61,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "ERROR",
            "type": "{string}",
            "static": 1,
            "class": "RequestEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/RouterEvent.ts",
            "line": 48,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "RouterEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/RouterEvent.ts",
            "line": 53,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "CHANGE",
            "type": "{string}",
            "static": 1,
            "class": "RouterEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/RouterEvent.ts",
            "line": 62,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "url",
            "type": "{string}",
            "access": "public",
            "tagname": "",
            "class": "RouterEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/RouterEvent.ts",
            "line": 71,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "silent",
            "type": "{boolean}",
            "access": "public",
            "tagname": "",
            "class": "RouterEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TimerEvent.ts",
            "line": 47,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TimerEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TimerEvent.ts",
            "line": 52,
            "description": "Dispatched whenever a Timer object reaches an interval specified according to the Timer.delay property.",
            "itemtype": "event",
            "name": "TIMER",
            "type": "{string}",
            "static": 1,
            "class": "TimerEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TimerEvent.ts",
            "line": 61,
            "description": "Dispatched whenever it has completed the number of requests set by Timer.repeatCount.",
            "itemtype": "event",
            "name": "TIMER_COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "TimerEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TransitionManagerEvent.ts",
            "line": 47,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionManagerEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TransitionManagerEvent.ts",
            "line": 52,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "TRANSITION",
            "type": "{string}",
            "static": 1,
            "class": "TransitionManagerEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TransitionManagerEvent.ts",
            "line": 61,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "TRANSITION_START",
            "type": "{string}",
            "static": 1,
            "class": "TransitionManagerEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TransitionManagerEvent.ts",
            "line": 70,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "TRANSITION_COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "TransitionManagerEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TweenEvent.ts",
            "line": 23,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TweenEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TweenEvent.ts",
            "line": 28,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "TweenEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TweenEvent.ts",
            "line": 37,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "TweenEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/event/TweenEvent.ts",
            "line": 46,
            "description": "YUIDoc_comment",
            "itemtype": "event",
            "name": "COMPLETE",
            "type": "{string}",
            "static": 1,
            "class": "TweenEvent",
            "module": "StructureTS",
            "submodule": "event"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 41,
            "itemtype": "method",
            "name": "destroy",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 51,
            "itemtype": "method",
            "name": "copy",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 56,
            "itemtype": "method",
            "name": "addItem",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 61,
            "itemtype": "method",
            "name": "addItems",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 66,
            "itemtype": "method",
            "name": "removeItem",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 71,
            "itemtype": "method",
            "name": "removeItems",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 76,
            "itemtype": "method",
            "name": "hasItem",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 81,
            "itemtype": "method",
            "name": "getIndexOfItem",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 86,
            "itemtype": "method",
            "name": "getItemByIndex",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 91,
            "itemtype": "method",
            "name": "forEach",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 96,
            "itemtype": "method",
            "name": "find",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 101,
            "itemtype": "method",
            "name": "sort",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICollection.ts",
            "line": 106,
            "itemtype": "method",
            "name": "filter",
            "class": "ICollection",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICore.ts",
            "line": 39,
            "itemtype": "property",
            "name": "CLASS_NAME",
            "readonly": "",
            "class": "ICore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICore.ts",
            "line": 45,
            "itemtype": "property",
            "name": "cid",
            "readonly": "",
            "class": "ICore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICore.ts",
            "line": 51,
            "itemtype": "method",
            "name": "getQualifiedClassName",
            "class": "ICore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/ICore.ts",
            "line": 56,
            "itemtype": "method",
            "name": "destroy",
            "class": "ICore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDOMElement.ts",
            "line": 41,
            "itemtype": "property",
            "name": "element",
            "class": "IDOMElement",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDOMElement.ts",
            "line": 46,
            "itemtype": "property",
            "name": "$element",
            "class": "IDOMElement",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDOMElement.ts",
            "line": 51,
            "itemtype": "method",
            "name": "getChild",
            "class": "IDOMElement",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDataStore.ts",
            "line": 42,
            "itemtype": "property",
            "name": "data",
            "class": "IDataStore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDataStore.ts",
            "line": 47,
            "itemtype": "property",
            "name": "src",
            "class": "IDataStore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDataStore.ts",
            "line": 52,
            "itemtype": "property",
            "name": "complete",
            "class": "IDataStore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDataStore.ts",
            "line": 57,
            "itemtype": "method",
            "name": "load",
            "class": "IDataStore",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 41,
            "itemtype": "property",
            "name": "isCreated",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 46,
            "itemtype": "property",
            "name": "numChildren",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 51,
            "itemtype": "property",
            "name": "children",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 56,
            "itemtype": "method",
            "name": "createChildren",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 61,
            "itemtype": "method",
            "name": "addChild",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 66,
            "itemtype": "method",
            "name": "removeChild",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 71,
            "itemtype": "method",
            "name": "removeChildren",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 76,
            "itemtype": "method",
            "name": "layoutChildren",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 81,
            "itemtype": "method",
            "name": "addChildAt",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 86,
            "itemtype": "method",
            "name": "getChildAt",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 91,
            "itemtype": "method",
            "name": "getChildIndex",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 96,
            "itemtype": "method",
            "name": "swapChildren",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IDisplayObject.ts",
            "line": 101,
            "itemtype": "method",
            "name": "swapChildrenAt",
            "class": "IDisplayObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IEventDispatcher.ts",
            "line": 42,
            "itemtype": "property",
            "name": "parent",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IEventDispatcher.ts",
            "line": 47,
            "itemtype": "method",
            "name": "addEventListener",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IEventDispatcher.ts",
            "line": 52,
            "itemtype": "method",
            "name": "removeEventListener",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IEventDispatcher.ts",
            "line": 57,
            "itemtype": "method",
            "name": "dispatchEvent",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "line": 39,
            "itemtype": "method",
            "name": "clone",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "line": 44,
            "itemtype": "method",
            "name": "copy",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "line": 49,
            "itemtype": "method",
            "name": "toJSON",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "line": 54,
            "itemtype": "method",
            "name": "toJSONString",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "line": 59,
            "itemtype": "method",
            "name": "fromJSON",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IValueObject.ts",
            "line": 64,
            "itemtype": "method",
            "name": "destroy",
            "class": "IValueObject",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/interface/IViewController.ts",
            "line": 41,
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "...rest",
                    "description": "The …rest parameter is an identifier that represents the name of the array of arguments passed in to the function. You can specify the data type of the … (rest) parameter as any[] (Array), but this could cause confusion because the parameter accepts a comma-delimited list of values, which is not identical to an instance of the array.",
                    "type": "Rest"
                }
            ],
            "class": "IViewController",
            "module": "StructureTS",
            "submodule": "interface"
        },
        {
            "file": "../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts",
            "line": 39,
            "overridden": "ValueObject.CLASS_NAME",
            "class": "LanguageConfigVO",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts",
            "line": 59,
            "overridden": "ValueObject.update",
            "class": "LanguageConfigVO",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts",
            "line": 72,
            "overridden": "ValueObject.copy",
            "class": "LanguageConfigVO",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 49,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "items",
            "type": "{array}",
            "readonly": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 58,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "length",
            "type": "{init}",
            "default": "0",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 74,
            "description": "Add an item to the current collection\nRequires that the item must be an instance of {{#crossLink \"IValueObject\"}}{{/crossLink}} or extends the {{#crossLink \"ValueObject\"}}{{/crossLink}} class.",
            "itemtype": "method",
            "name": "addItem",
            "params": [
                {
                    "name": "item",
                    "description": "The item or {{#crossLink \"ValueObject\"}}{{/crossLink}} to add.",
                    "type": "IValueObject"
                },
                {
                    "name": "silent",
                    "description": "If you'd like to prevent the event from being dispatched.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 102,
            "description": "Removes an item from the collection, maintaining its current sort\nIf the collection doesn't have the item, it throws an error",
            "itemtype": "method",
            "name": "removeItem",
            "params": [
                {
                    "name": "item",
                    "description": "Item to remove",
                    "type": "IValueObject"
                },
                {
                    "name": "silent",
                    "description": "If you'd like to prevent the event from being dispatched.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 133,
            "description": "Removes an array of items from the collection",
            "itemtype": "method",
            "name": "removeItems",
            "params": [
                {
                    "name": "items",
                    "description": "List of items to add to the current collection",
                    "type": "IValueObject[]"
                },
                {
                    "name": "silent",
                    "description": "If you'd like to prevent the event from being dispatched.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 155,
            "description": "Checks if a collection has an item.",
            "itemtype": "method",
            "name": "hasItem",
            "params": [
                {
                    "name": "item",
                    "description": "Item to check",
                    "type": "IValueObject"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 168,
            "description": "Returns the array index position of the value object.",
            "itemtype": "method",
            "name": "getIndexOfItem",
            "params": [
                {
                    "name": "item",
                    "description": "IValueObject get the index of.",
                    "type": "IValueObject"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 181,
            "description": "Adds an array of items to the collection",
            "itemtype": "method",
            "name": "addItems",
            "params": [
                {
                    "name": "items",
                    "description": "List of items to add to the current collection.",
                    "type": "IValueObject[]"
                },
                {
                    "name": "silent",
                    "description": "If you'd like to prevent the event from being dispatched.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 202,
            "description": "Finds an object by an index value.\nIf the index is out of bounds, the collection will clamp it.",
            "itemtype": "method",
            "name": "getItemByIndex",
            "params": [
                {
                    "name": "index",
                    "description": "The index integer of the item to get",
                    "type": "Init"
                }
            ],
            "return": {
                "description": "item to find",
                "type": "IValueObject"
            },
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 228,
            "description": "Loops through each object in the collection and performs some function from it",
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "operation",
                    "description": "Operation to perform, provides 2 parameters element, and index",
                    "type": "Function"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 240,
            "description": "Examines each element in a collection, returning an array of all elements that have the given properties.\nWhen checking properties, this method performs a deep comparison between values to determine if they are equivalent to each other.",
            "example": [
                "\n     // Finds all value object that has 'Robert' in it.\n     this._collection.find(\"Robert\");\n     // Finds any value object that has 'Robert' or 'Heater' or 23 in it.\n     this._collection.find([\"Robert\", \"Heather\", 32]);\n\n     // Finds all value objects that same key and value you are searching for.\n     this._collection.find({ name: 'apple', organic: false, type: 'fruit' });\n     this._collection.find([{ type: 'vegetable' }, { name: 'apple', 'organic: false, type': 'fruit' }]);"
            ],
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Object|Array"
                }
            ],
            "return": {
                "description": "Returns a list of found IValueObject's.",
                "type": "Array"
            },
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 287,
            "description": "Loops through all properties of an object and check to see if the value matches the argument passed in.",
            "itemtype": "method",
            "name": "findPropertyValue",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "String|Number|Boolean>"
                }
            ],
            "return": {
                "description": "Returns a list of found IValueObject's.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 332,
            "description": "Sorts the collection based on the sort function provided",
            "itemtype": "method",
            "name": "sort",
            "params": [
                {
                    "name": "sort",
                    "description": "Sort to use, provides 2 users",
                    "type": "Function"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 345,
            "description": "Filters the collection based on the filter test operation provided",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "filter",
                    "description": "Operation to perform, provides 2 parameters element, and index",
                    "type": "Function"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 372,
            "description": "Applies a function to each of the items in the list",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "map",
                    "description": "Operation to perform, provides 2 parameters element, and index",
                    "type": "Function"
                }
            ],
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 393,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "copy",
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 406,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "silent",
                    "description": "If you'd like to prevent the event from being dispatched.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/Collection.ts",
            "line": 424,
            "overridden": "BaseObject.destroy",
            "class": "Collection",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 46,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 67,
            "description": "The ...",
            "itemtype": "method",
            "name": "loadConfig",
            "params": [
                {
                    "name": "path",
                    "description": "The path to the main language config json file.",
                    "type": "String"
                }
            ],
            "example": [
                "\n      {\n          \"data\": [\n              {\n                  \"id\": \"en-US\",\n                  \"lang\": \"English\",\n                  \"text\": \"English\",\n                  \"path\": \"data/languages/main.en.json\"\n              },\n              {\n                  \"id\": \"es-ES\",\n                  \"lang\": \"Spanish\",\n                  \"text\": \"Español\",\n                  \"path\": \"data/languages/main.sp.json\"\n              }\n          ]\n      }"
            ],
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 97,
            "itemtype": "method",
            "name": "setLang",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 107,
            "itemtype": "method",
            "name": "loadLanguageData",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "LanguageConfigVO"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 122,
            "itemtype": "method",
            "name": "getSupportedLanguages",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 136,
            "itemtype": "method",
            "name": "loadLanguageById",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 146,
            "itemtype": "method",
            "name": "getLangConfigById",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "LanguageConfigVO"
            },
            "access": "protected",
            "tagname": "",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 158,
            "itemtype": "method",
            "name": "onConfigLoaded",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "LoaderEvent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 197,
            "itemtype": "method",
            "name": "onLanguageDataLoad",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "LoaderEvent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/LanguageModel.ts",
            "line": 212,
            "description": "We need to check if the language id that exists in LocalStorage matches an id in the _availableLanguagesDictionary.\nIf the application was updated and the language id's changed it would break the application.",
            "itemtype": "method",
            "name": "hasLanguage",
            "access": "private",
            "tagname": "",
            "class": "LanguageModel",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 43,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "ValueObject",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 53,
            "description": "Provide a way to update the value object.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Any"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "ValueObject",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 65,
            "description": "...",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "",
                "type": "ValueObject"
            },
            "access": "public",
            "tagname": "",
            "class": "ValueObject",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 79,
            "description": "...",
            "itemtype": "method",
            "name": "toJSONString",
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "class": "ValueObject",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 91,
            "description": "Converts the string json data into an Object and calls the {{#crossLink \"ValueObject/update:method\"}}{{/crossLink}} method with the converted Object.",
            "itemtype": "method",
            "name": "fromJSON",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "ValueObject",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 106,
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "class": "ValueObject",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/model/ValueObject.ts",
            "line": 118,
            "itemtype": "method",
            "name": "copy",
            "return": {
                "description": "",
                "type": "IValueObject"
            },
            "access": "public",
            "tagname": "",
            "class": "ValueObject",
            "module": "StructureTS",
            "submodule": "model"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 20,
            "description": "A reference to the EventDispatcher object.",
            "itemtype": "property",
            "name": "_eventDispatcher",
            "type": "{EventDispatcher}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 30,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_initialized",
            "type": "{boolean}",
            "access": "private",
            "tagname": "",
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 44,
            "description": "Adds the necessary event listeners to listen for the 'online' and 'offline' events.\nAlso dispatches a {{#crossLink \"NetworkMonitorEvent\"}}{{/crossLink}} right away with the status of the network connection.\nIt is recommended you call NetworkMonitor.init(); when your application starts up.",
            "example": [
                "\n     NetworkMonitor.init();"
            ],
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 72,
            "description": "Returns the online status of the browser. The property returns a boolean value, with true for being online and false for being offline.",
            "example": [
                "\n     NetworkMonitor.connected();"
            ],
            "itemtype": "method",
            "name": "connected",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 88,
            "description": "Returns if the status type ('online' or 'offline') if computer or device is connected to the internet.",
            "example": [
                "\n     NetworkMonitor.getStatus();"
            ],
            "itemtype": "method",
            "name": "getStatus",
            "return": {
                "description": "Returns 'online' or 'offline'.",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 104,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "onNetworkMonitorEvent",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 119,
            "description": "Registers an event listener object with an NetworkMonitor object so that the listener receives notification of an event.",
            "example": [
                "\n     NetworkMonitor.addEventListener(NetworkMonitorEvent.STATUS, this.handlerMethod, this);\n     private handlerMethod(event:NetworkMonitorEvent):void {\n         console.log(event.status, event.connected);\n     }"
            ],
            "itemtype": "method",
            "name": "addEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener function that processes the event. This function must accept an Event object as its only parameter and must return nothing, as this example shows. @example function(event:Event):void",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Binds the scope to a particular object (scope is basically what \"this\" refers to in your function). This can be very useful in JavaScript because scope isn't generally maintained.",
                    "type": "Any"
                },
                {
                    "name": "priority",
                    "description": "Influences the order in which the listeners are called. Listeners with lower priorities are called after ones with higher priorities.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 139,
            "description": "Removes a specified listener from the NetworkMonitor object.",
            "example": [
                "\n     NetworkMonitor.removeEventListener(NetworkMonitorEvent.STATUS, this.handlerMethod, this);\n     private handlerMethod(event:NetworkMonitorEvent):void {\n         console.log(event.status, event.connected);\n     }"
            ],
            "itemtype": "method",
            "name": "removeEventListener",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener object to remove.",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "The scope of the listener object to be removed.\nTo keep things consistent this parameter is required.",
                    "type": "Any"
                }
            ],
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/NetworkMonitor.ts",
            "line": 159,
            "description": "<p>Dispatches an event within the NetworkMonitorEvent object.</p>",
            "itemtype": "method",
            "name": "dispatchEvent",
            "params": [
                {
                    "name": "event",
                    "description": "The Event object that is dispatched into the event flow. You can create custom events, the only requirement is all events must\nextend the {{#crossLink \"NetworkMonitorEvent\"}}{{/crossLink}}.",
                    "type": "NetworkMonitorEvent"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "NetworkMonitor",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLContentType.ts",
            "line": 42,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "URLContentType",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLLoader.ts",
            "line": 43,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "URLLoader",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLLoader.ts",
            "line": 48,
            "itemtype": "property",
            "name": "dataFormat",
            "type": "{string}",
            "default": "URLLoaderDataFormat.TEXT",
            "class": "URLLoader",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLLoader.ts",
            "line": 56,
            "itemtype": "property",
            "name": "data",
            "type": "{any}",
            "default": "null",
            "class": "URLLoader",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLLoader.ts",
            "line": 64,
            "itemtype": "property",
            "name": "ready",
            "type": "{boolean}",
            "default": "false",
            "class": "URLLoader",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLLoader.ts",
            "line": 72,
            "itemtype": "property",
            "name": "_defer",
            "type": "{jQuery.Deferred}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "URLLoader",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLLoaderDataFormat.ts",
            "line": 40,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "URLLoaderDataFormat",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLRequest.ts",
            "line": 45,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "URLRequest",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLRequest.ts",
            "line": 50,
            "description": "The URL to be requested.",
            "itemtype": "property",
            "name": "url",
            "type": "{string}",
            "access": "public",
            "tagname": "",
            "class": "URLRequest",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLRequest.ts",
            "line": 59,
            "description": "Controls the HTTP form submission method ({{#crossLink \"URLRequestMethod\"}}{{/crossLink}}).",
            "itemtype": "property",
            "name": "method",
            "type": "{string}",
            "default": "URLRequestMethod.GET",
            "access": "public",
            "tagname": "",
            "class": "URLRequest",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLRequest.ts",
            "line": 69,
            "description": "The MIME content type of the content in the the data property ({{#crossLink \"URLContentType\"}}{{/crossLink}}).",
            "itemtype": "property",
            "name": "method",
            "type": "{string}",
            "default": "application/x-www-form-urlencoded",
            "access": "public",
            "tagname": "",
            "class": "URLRequest",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLRequest.ts",
            "line": 79,
            "description": "An object containing data to be transmitted with the URL request.",
            "itemtype": "property",
            "name": "data",
            "type": "{any}",
            "access": "public",
            "tagname": "",
            "class": "URLRequest",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/net/URLRequestMethod.ts",
            "line": 38,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "URLRequestMethod",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts",
            "line": 3,
            "version": "0.2.0",
            "class": "BaseRequest",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts",
            "line": 7,
            "description": "Generates a hash string from the string being passed in. In this case it is a function that is casted as string value.",
            "params": [
                {
                    "name": "str",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "BaseRequest",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/request/BaseRequest.ts",
            "line": 44,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "BaseRequest",
            "module": "StructureTS",
            "submodule": "net"
        },
        {
            "file": "../src/com/codebelt/structurets/request/JsonRequest.ts",
            "line": 31,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "AssetLoader",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/util/AssetLoader.ts",
            "line": 42,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "AssetLoader",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/BrowserUtils.ts",
            "line": 38,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "BrowserUtils",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/BrowserUtils.ts",
            "line": 47,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "hasBrowserHistory",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "BrowserUtils",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/BrowserUtils.ts",
            "line": 60,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "hasLocalStorage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "BrowserUtils",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/BrowserUtils.ts",
            "line": 80,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "hasSessionStorage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "BrowserUtils",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/DataLoader.ts",
            "line": 40,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "DataLoader",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "line": 40,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "DateUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "line": 45,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "LONG_DAY_LABELS",
            "type": "{array}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "class": "DateUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "line": 56,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "SHORT_DAY_LABELS",
            "type": "{array}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "class": "DateUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "line": 67,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "LONG_MONTH_LABELS",
            "type": "{array}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "class": "DateUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "line": 78,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "SHORT_MONTH_LABELS",
            "type": "{array}",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "class": "DateUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/DateUtil.ts",
            "line": 93,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "getDaySuffix",
            "params": [
                {
                    "name": "today",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "DateUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/HtmlLoader.ts",
            "line": 45,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "HtmlLoader",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/ImageLoader.ts",
            "line": 42,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "ImageLoader",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 41,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 50,
            "description": "Returns a number constrained between min and max.",
            "itemtype": "method",
            "name": "constrain",
            "params": [
                {
                    "name": "num",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 73,
            "description": "Returns a random number between min and max.",
            "itemtype": "method",
            "name": "randomRange",
            "params": [
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 93,
            "description": "Returns the percentage of a number in a given range.\nExample: num = 15 range 10 to 20 // outputs 0.5",
            "itemtype": "method",
            "name": "rangeToPercent",
            "params": [
                {
                    "name": "num",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "constrainMin",
                    "description": "Returns 0 if num < min.",
                    "type": "Boolean"
                },
                {
                    "name": "constrainMax",
                    "description": "Returns 1 if num > max.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 119,
            "description": "Returns the number that corresponds to the percentage in a given range.\nExample: percent = 0.5 range 10 to 20 // outputs 15",
            "itemtype": "method",
            "name": "percentToRange",
            "params": [
                {
                    "name": "percent",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 135,
            "description": "Re-maps a number from one range to another. The output is the same as inputing the result of rangeToPercent() numbero percentToRange().\nExample: num = 10, min1 = 0, max1 = 100, min2 = 0, max2 = 50 // outputs 5",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "num",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "min1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "min2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 168,
            "description": "Converts radians to degrees.",
            "itemtype": "method",
            "name": "radiansToDegrees",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 181,
            "description": "Converts degrees to radians.",
            "itemtype": "method",
            "name": "degreesToRadians",
            "params": [
                {
                    "name": "degrees",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 194,
            "description": "Returns 1 if the value is >= 0. Returns -1 if the value is < 0.",
            "itemtype": "method",
            "name": "sign",
            "params": [
                {
                    "name": "num",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 210,
            "description": "Check if number is positive (zero is positive).",
            "itemtype": "method",
            "name": "isPositive",
            "params": [
                {
                    "name": "num",
                    "description": "The number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 222,
            "description": "Check if number is negative.",
            "itemtype": "method",
            "name": "isNegative",
            "params": [
                {
                    "name": "num",
                    "description": "The",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 234,
            "description": "Check if number is odd (convert to Integer if necessary).",
            "itemtype": "method",
            "name": "isOdd",
            "params": [
                {
                    "name": "num",
                    "description": "The number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 248,
            "description": "Check if number is even (convert to Integer if necessary).",
            "itemtype": "method",
            "name": "isEven",
            "params": [
                {
                    "name": "num",
                    "description": "The number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 262,
            "description": "Check if number is Prime (divisible only by itself and one).",
            "itemtype": "method",
            "name": "isPrime",
            "params": [
                {
                    "name": "num",
                    "description": "The number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 287,
            "description": "Calculate the factorial of the integer.",
            "itemtype": "method",
            "name": "factorial",
            "params": [
                {
                    "name": "num",
                    "description": "The number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 310,
            "description": "Return an array of divisors of the integer.",
            "itemtype": "method",
            "name": "getDivisors",
            "params": [
                {
                    "name": "num",
                    "description": "The number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array.<number>"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 334,
            "description": "Convert Fahrenheit to Celsius.",
            "itemtype": "method",
            "name": "toCelsius",
            "params": [
                {
                    "name": "fahrenheit",
                    "description": "The fahrenheit value.",
                    "type": "Number"
                },
                {
                    "name": "decimals",
                    "description": "The number of decimals.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MathUtil.ts",
            "line": 364,
            "description": "Convert Celsius to Fahrenheit.",
            "itemtype": "method",
            "name": "toFahrenheit",
            "params": [
                {
                    "name": "celsius",
                    "description": "The celsius value.",
                    "type": "Number"
                },
                {
                    "name": "decimals",
                    "description": "The number of decimals.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MerchantUtil.ts",
            "line": 38,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "MerchantUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MerchantUtil.ts",
            "line": 48,
            "description": "Determines if credit card is valid using the Luhn formula.",
            "example": [
                "\nMerchantUtil.isCreditCard(\"1234567890123456\");"
            ],
            "itemtype": "method",
            "name": "isCreditCard",
            "params": [
                {
                    "name": "cardNumber",
                    "description": "The credit card number.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "<code>true</code> if String is a valid credit card number; otherwise <code>false</code>.",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "MerchantUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MerchantUtil.ts",
            "line": 89,
            "description": "Encode a credit card number as a string and encode all digits except the last <code>digitsShown</code>.",
            "example": [
                "\nMerchantUtil.encodeCreditCardNumber(\"1234567890123456\"); // ************3456\nMerchantUtil.encodeCreditCardNumber(\"1234567890123456\", 5, \"x\");  // xxxxxxxxxxx23456"
            ],
            "itemtype": "method",
            "name": "encodeCreditCardNumber",
            "params": [
                {
                    "name": "strNumber",
                    "description": "The credit card number as string.",
                    "type": "String"
                },
                {
                    "name": "digitsShown",
                    "description": "Display this many digits at the end of the card number for security purposes.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "4"
                },
                {
                    "name": "encodeChar",
                    "description": "Optional encoding character to use instead of default '*'.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "MerchantUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MerchantUtil.ts",
            "line": 115,
            "description": "Returns a credit card provider name from the credit card number passed in.",
            "itemtype": "method",
            "name": "getCreditCardProvider",
            "params": [
                {
                    "name": "cardNumber",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MerchantUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MerchantUtil.ts",
            "line": 156,
            "description": "Validate a credit card's expiration date.",
            "example": [
                "\nvar isValidDate:boolean = MerchantUtil.isValidExDate( 11, 2010 );"
            ],
            "itemtype": "method",
            "name": "isValidExpirationDate",
            "params": [
                {
                    "name": "month",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "year",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MerchantUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/MobileUtil.ts",
            "line": 38,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "MobileUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 40,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "NumberUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 49,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "bytesToMegabytes",
            "params": [
                {
                    "name": "bytes",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "NumberUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 61,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "centimeterToInch",
            "params": [
                {
                    "name": "cm",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "NumberUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 73,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "inchToCentimeter",
            "params": [
                {
                    "name": "inch",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "NumberUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 85,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "feetToMeter",
            "params": [
                {
                    "name": "feet",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "NumberUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 97,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "convertToHHMMSS",
            "params": [
                {
                    "name": "seconds",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "NumberUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/NumberUtil.ts",
            "line": 119,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "doubleDigitFormat",
            "params": [
                {
                    "name": "num",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "NumberUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 41,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 50,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "stringToBoolean",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 64,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "getExtension",
            "params": [
                {
                    "name": "filename",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 78,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "hyphenToCamelCase",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 95,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "hyphenToPascalCase",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 112,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "camelCaseToHyphen",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 129,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "createUUID",
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 149,
            "description": "YUIDoc_comment",
            "itemtype": "method",
            "name": "queryStringToObject",
            "params": [
                {
                    "name": "queryString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 177,
            "description": "Remove all whitespace from the string passed in.",
            "example": [
                "\n     var str = \"   a b    c d e f g \";\n     StringUtil.removeAllWhitespace(str);\n     // \"abcdefg\""
            ],
            "itemtype": "method",
            "name": "removeAllWhitespace",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 195,
            "description": "Remove leading and trailing whitespace.",
            "example": [
                "\n     var str = \"   a b    c d e f g \";\n     StringUtil.removeLeadingTrailingWhitespace(str);\n     // \"a b c d e f g\""
            ],
            "itemtype": "method",
            "name": "removeLeadingTrailingWhitespace",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/StringUtil.ts",
            "line": 213,
            "itemtype": "method",
            "name": "truncate",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "StringUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/TemplateFactory.ts",
            "line": 41,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TemplateFactory",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 43,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 48,
            "description": "A reference to the setInterval object.",
            "itemtype": "property",
            "name": "_timer",
            "type": "{Function}",
            "access": "private",
            "tagname": "",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 57,
            "description": "The total number of times the timer has fired since it started at zero. If the timer has been reset, only the fires since the reset are counted.",
            "itemtype": "property",
            "name": "currentCount",
            "type": "{int}",
            "access": "private",
            "tagname": "",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 66,
            "description": "The delay, in milliseconds, between timer events. If you set the delay interval while the timer is running, the timer will restart at the same repeatCount iteration.\n<strong>Note:</strong> A delay lower than 20 milliseconds is not recommended.",
            "itemtype": "property",
            "name": "delay",
            "type": "{number}",
            "access": "private",
            "tagname": "",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 76,
            "description": "The total number of times the timer is set to run. If the repeat count is set to 0, the timer continues indefinitely. If the repeat count is nonzero, the timer runs the specified number of times. If repeatCount is set to a total that is the same or less then currentCount the timer stops and will not fire again.",
            "itemtype": "property",
            "name": "repeatCount",
            "type": "{int}",
            "access": "private",
            "tagname": "",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 85,
            "description": "The timer's current state; true if the timer is running, otherwise false.",
            "itemtype": "property",
            "name": "running",
            "type": "{boolean}",
            "readonly": "",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 104,
            "description": "Returns the total number of times the timer has fired since it started at zero.",
            "itemtype": "method",
            "name": "getCurrentCount",
            "return": {
                "description": "The total number of times the timer has fired since it started at zero.",
                "type": "Number"
            },
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 115,
            "description": "Returns the delay time in milliseconds.",
            "itemtype": "method",
            "name": "getDelay",
            "return": {
                "description": "Returns the delay time in milliseconds.",
                "type": "Number"
            },
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 126,
            "description": "Sets the delay, in milliseconds, between timer events.",
            "itemtype": "method",
            "name": "setDelay",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 141,
            "description": "Returns the total number of times the timer is set to run.",
            "itemtype": "method",
            "name": "getRepeatCount",
            "return": {
                "description": "Returns the total number of times the timer is set to run.",
                "type": "Number"
            },
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 152,
            "description": "Set the total number of times the timer is set to run. If the repeat count is set to 0, the timer continues indefinitely. If the repeat count is nonzero, the timer runs the specified number of times. If repeatCount is set to a total that is the same or less then currentCount the timer stops and will not fire again.",
            "itemtype": "method",
            "name": "setRepeatCount",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 168,
            "description": "Stops the timer, if it is running, and sets the currentCount property back to 0, like the reset button of a stopwatch.",
            "itemtype": "method",
            "name": "reset",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 182,
            "description": "Starts the timer, if it is not already running.",
            "itemtype": "method",
            "name": "start",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 204,
            "description": "Stops the timer.",
            "itemtype": "method",
            "name": "stop",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 217,
            "itemtype": "method",
            "name": "decrementCounter",
            "access": "private",
            "tagname": "",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Timer.ts",
            "line": 240,
            "overridden": "EventDispatcher.destroy",
            "class": "Timer",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/TransitionFactory.ts",
            "line": 52,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "TransitionFactory",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/TransitionFactory.ts",
            "line": 57,
            "description": "YUIDoc_comment",
            "itemtype": "property",
            "name": "_transitions",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "TransitionFactory",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/TransitionFactory.ts",
            "line": 79,
            "description": "YUIDoc_comment",
            "params": [
                {
                    "name": "transitionType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "sectionStage",
                    "description": "",
                    "type": "DisplayObjectContainer"
                },
                {
                    "name": "currentView",
                    "description": "",
                    "type": "DOMElement"
                },
                {
                    "name": "nextView",
                    "description": "",
                    "type": "DOMElement"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "ITransition"
            },
            "class": "TransitionFactory",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/TransitionFactory.ts",
            "line": 107,
            "description": "The registerTransition method allows you to add custom transitions to the {{#crossLink \"TransitionFactory\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "registerTransition",
            "params": [
                {
                    "name": "key",
                    "description": "The key value for the transition being passed in.",
                    "type": "String"
                },
                {
                    "name": "transitionFactory",
                    "description": "A transition that implements {{#crossLink \"ITransition\"}}{{/crossLink}}.",
                    "type": "ITransition"
                }
            ],
            "chainable": 1,
            "access": "public",
            "tagname": "",
            "class": "TransitionFactory",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/TransitionFactory.ts",
            "line": 128,
            "overridden": "BaseObject.destroy",
            "class": "TransitionFactory",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Util.ts",
            "line": 38,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "Util",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Util.ts",
            "line": 43,
            "description": "Keeps track of the count for the uniqueId method.",
            "itemtype": "property",
            "name": "_idCounter",
            "type": "{init}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Util",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Util.ts",
            "line": 57,
            "description": "Generates a unique ID. If a prefix is passed in, the value will be appended to it.",
            "example": [
                "\n     var property:number = Util.uniqueId();\n     // 1\n\n     var property:string = Util.uniqueId('yomama_');\n     // yomama_1"
            ],
            "itemtype": "method",
            "name": "uniqueId",
            "params": [
                {
                    "name": "prefix",
                    "description": "The string value used for the prefix.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the unique identifier.",
                "type": "Init|string"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Util",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/Util.ts",
            "line": 85,
            "itemtype": "method",
            "name": "deletePropertyFromObject",
            "params": [
                {
                    "name": "object",
                    "description": "The object you want to remove properties from.",
                    "type": "Object"
                },
                {
                    "name": "list",
                    "description": "A list of property names you want to remove from the object.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the object passed in without the removed the properties.",
                "type": "Any"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Util",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "line": 38,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "ValidationUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "line": 47,
            "description": "Determines if the String passed in is a valid email address.",
            "itemtype": "method",
            "name": "isValidEmailAddress",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "ValidationUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "line": 62,
            "description": "Determines if the String passed in is a phone number.",
            "itemtype": "method",
            "name": "isValidPhoneNumber",
            "params": [
                {
                    "name": "phoneNumber",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "ValidationUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "line": 77,
            "description": "Determines if the String passed in is a zip code.",
            "itemtype": "method",
            "name": "isZipCode",
            "params": [
                {
                    "name": "zipCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "ValidationUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/ValidationUtil.ts",
            "line": 92,
            "description": "Determines if the String passed in is a postal code.",
            "itemtype": "method",
            "name": "isPostalCode",
            "params": [
                {
                    "name": "postalCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "ValidationUtil",
            "module": "StructureTS",
            "submodule": "util"
        },
        {
            "file": "../src/com/codebelt/structurets/util/XML.ts",
            "line": 7,
            "overridden": "BaseObject.CLASS_NAME",
            "class": "BaseObject",
            "module": "StructureTS"
        },
        {
            "file": "../src/com/codebelt/structurets/BaseObject.ts",
            "line": 47,
            "description": "The fully qualified class name of the object. Use {{#crossLink \"BaseObject/getQualifiedClassName:method\"}}{{/crossLink}} method to retrieve the class name of a StructureTS object.",
            "itemtype": "property",
            "name": "CLASS_NAME",
            "type": "{string}",
            "final": 1,
            "access": "protected",
            "tagname": "",
            "class": "BaseObject",
            "module": "StructureTS",
            "submodule": "core"
        },
        {
            "file": "../src/com/codebelt/structurets/BaseObject.ts",
            "line": 57,
            "description": "The cid or client id is a unique identifier automatically assigned to most StructureTS objects upon instantiation.",
            "itemtype": "property",
            "name": "cid",
            "type": "{int}",
            "default": "null",
            "writeonce": "",
            "access": "public",
            "tagname": "",
            "class": "BaseObject",
            "module": "StructureTS",
            "submodule": "core"
        },
        {
            "file": "../src/com/codebelt/structurets/BaseObject.ts",
            "line": 73,
            "description": "Returns the fully qualified class name of an object.",
            "example": [
                "\n     instance.getQualifiedClassName();"
            ],
            "itemtype": "method",
            "name": "getQualifiedClassName",
            "return": {
                "description": "Returns the class name.",
                "type": "String"
            },
            "access": "public",
            "tagname": "",
            "class": "BaseObject",
            "module": "StructureTS",
            "submodule": "core"
        },
        {
            "file": "../src/com/codebelt/structurets/BaseObject.ts",
            "line": 86,
            "description": "The purpose of the destroy method is to make an object ready for garbage collection. This\nshould be thought of as a one way function. Once destroy is called no further methods should be\ncalled on the object or properties accessed. It is the responsibility of those who implement this\nfunction to stop all running Timers, all running Sounds, remove any event\nlisteners and take any other steps necessary to make an object eligible for garbage collection.\nIt is critical that all subclasses call the super for this function in their overridden methods.\n\nNote: super.destroy(); should be called first before you clean up any other objects/items in the current classs.\nThe {{#crossLink \"BaseObject/destroy:method\"}}{{/crossLink}} method also calls the\n{{#crossLink \"EventDispatcher/disable:method\"}}{{/crossLink}} method on all classes that extend\n{{#crossLink \"EventDispatcher\"}}{{/crossLink}}.",
            "example": [
                "\n     public destroy():void {\n         super.destroy();\n\n         this._childInstance.destroy();\n         this._childInstance = null;\n     }"
            ],
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "BaseObject",
            "module": "StructureTS",
            "submodule": "core"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/component/CarouselComponent.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/component/CarouselComponent.ts:42"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " ../src/com/codebelt/structurets/component/CarouselComponent.ts:296"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/component/TabComponent.ts:33"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/component/TabComponent.ts:112"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/component/TabComponent.ts:124"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/component/TabComponent.ts:136"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/constant/TransitionType.ts:27"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:34"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:65"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:81"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:126"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:140"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts:71"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts:71"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionNone.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionNone.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionNone.ts:54"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionNone.ts:71"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts:71"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts:74"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts:74"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts:71"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts:30"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts:42"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/ApplicationCacheController.ts:30"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/ApplicationCacheController.ts:41"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/ApplicationCacheController.ts:79"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/ApplicationCacheController.ts:99"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/BaseController.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/BaseController.ts:41"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:31"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:42"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:88"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:225"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:236"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:257"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/RouterController.ts:37"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/RouterController.ts:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/RouterController.ts:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/RouterController.ts:143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/RouterController.ts:153"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/controller/RouterController.ts:163"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/TransitionManager.ts:35"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/TransitionManager.ts:108"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/controller/UndoManager.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/controller/UndoManager.ts:40"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/display/Bitmap.ts:30"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/Bitmap.ts:42"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/display/Canvas.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/Canvas.ts:41"
        },
        {
            "message": "unknown tag: override",
            "line": " ../src/com/codebelt/structurets/display/Canvas.ts:79"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/display/CanvasElement.ts:30"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/CanvasElement.ts:42"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:107"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:134"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:180"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:216"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:230"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:242"
        },
        {
            "message": "unknown tag: override",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:242"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:261"
        },
        {
            "message": "unknown tag: override",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:261"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:304"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:340"
        },
        {
            "message": "unknown tag: override",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:340"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:362"
        },
        {
            "message": "unknown tag: override",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:362"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:382"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:398"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:423"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:171"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:199"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:215"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:245"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:271"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:293"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:305"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:328"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:342"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/MovieClip.ts:32"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/display/Stage.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/display/Stage.ts:79"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/native/MouseEvents.ts:27"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/native/NavigatorEvents.ts:27"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/native/WindowEvents.ts:27"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts:47"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/BaseEvent.ts:27"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/BaseEvent.ts:62"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/CarouselEvent.ts:5"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/CarouselEvent.ts:23"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/EventBroker.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/EventBroker.ts:41"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/EventDispatcher.ts:30"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/EventDispatcher.ts:43"
        },
        {
            "message": "unknown tag: hide",
            "line": " ../src/com/codebelt/structurets/event/EventDispatcher.ts:131"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/EventDispatcher.ts:227"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/LanguageEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/LanguageEvent.ts:47"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/LoaderEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/LoaderEvent.ts:47"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/LocalStorageEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/LocalStorageEvent.ts:48"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts:47"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/RequestEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/RequestEvent.ts:47"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/RouterEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/RouterEvent.ts:48"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/TimerEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/TimerEvent.ts:47"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/TransitionManagerEvent.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/TransitionManagerEvent.ts:47"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/event/TweenEvent.ts:5"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/event/TweenEvent.ts:23"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/ICollection.ts:29"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/ICollection.ts:29"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/ICore.ts:27"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/ICore.ts:27"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/IDOMElement.ts:29"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/IDOMElement.ts:29"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/IDataStore.ts:29"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/IDataStore.ts:29"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/IDisplayObject.ts:29"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/IDisplayObject.ts:29"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/IEventDispatcher.ts:30"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/IEventDispatcher.ts:30"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/ITransition.ts:31"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/IValueObject.ts:27"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/IValueObject.ts:27"
        },
        {
            "message": "unknown tag: interface",
            "line": " ../src/com/codebelt/structurets/interface/IViewController.ts:29"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/interface/IViewController.ts:29"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts:39"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts:59"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts:72"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/model/Collection.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/model/Collection.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/model/Collection.ts:424"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/model/LanguageModel.ts:35"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/model/LanguageModel.ts:46"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/model/ValueObject.ts:31"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/model/ValueObject.ts:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/model/ValueObject.ts:65"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/model/ValueObject.ts:79"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/model/ValueObject.ts:106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/model/ValueObject.ts:118"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/net/NetworkMonitor.ts:7"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/net/NetworkMonitor.ts:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/net/NetworkMonitor.ts:88"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/net/URLContentType.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/net/URLContentType.ts:42"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/net/URLLoader.ts:32"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/net/URLLoader.ts:43"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/net/URLLoaderDataFormat.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/net/URLLoaderDataFormat.ts:40"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/net/URLRequest.ts:31"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/net/URLRequest.ts:45"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/net/URLRequestMethod.ts:27"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/net/URLRequestMethod.ts:38"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts:7"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/request/BaseRequest.ts:33"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/request/BaseRequest.ts:44"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/request/JsonRequest.ts:31"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/AssetLoader.ts:31"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/AssetLoader.ts:42"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/BrowserUtils.ts:27"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/BrowserUtils.ts:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/BrowserUtils.ts:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/BrowserUtils.ts:60"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/BrowserUtils.ts:80"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/DataLoader.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/DataLoader.ts:40"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/DateUtil.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/DateUtil.ts:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/DateUtil.ts:93"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/HtmlLoader.ts:34"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/HtmlLoader.ts:45"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/ImageLoader.ts:31"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/ImageLoader.ts:42"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/MathUtil.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/MathUtil.ts:41"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/MerchantUtil.ts:27"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/MerchantUtil.ts:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/MerchantUtil.ts:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/MerchantUtil.ts:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/MerchantUtil.ts:115"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/MerchantUtil.ts:156"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/MobileUtil.ts:27"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/MobileUtil.ts:38"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:49"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:61"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:119"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:29"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:78"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:129"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:195"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:213"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/TemplateFactory.ts:30"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/TemplateFactory.ts:41"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:30"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:104"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:115"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:141"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:240"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/TransitionFactory.ts:40"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/TransitionFactory.ts:52"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/TransitionFactory.ts:79"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/TransitionFactory.ts:128"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/Util.ts:27"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/Util.ts:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/Util.ts:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/Util.ts:85"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/util/ValidationUtil.ts:27"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/ValidationUtil.ts:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/ValidationUtil.ts:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/ValidationUtil.ts:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/ValidationUtil.ts:77"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/util/ValidationUtil.ts:92"
        },
        {
            "message": "unknown tag: overridden",
            "line": " ../src/com/codebelt/structurets/util/XML.ts:7"
        },
        {
            "message": "unknown tag: version",
            "line": " ../src/com/codebelt/structurets/BaseObject.ts:36"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../src/com/codebelt/structurets/BaseObject.ts:73"
        },
        {
            "message": "Missing item type\nAJAX",
            "line": " ../src/com/codebelt/structurets/_declare/jquery.d.ts:201"
        },
        {
            "message": "Missing item type\nParses a string into an array of DOM nodes.",
            "line": " ../src/com/codebelt/structurets/_declare/jquery.d.ts:340"
        },
        {
            "message": "Missing item type\nCollections",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:37"
        },
        {
            "message": "Missing item type\nArrays",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:103"
        },
        {
            "message": "Missing item type\nFunctions",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:151"
        },
        {
            "message": "Missing item type\nObjects",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:167"
        },
        {
            "message": "Missing item type\nUtility",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:203"
        },
        {
            "message": "Missing item type\nChaining",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:218"
        },
        {
            "message": "Missing item type\nArrays",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:279"
        },
        {
            "message": "Missing item type\nFunctions",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:317"
        },
        {
            "message": "Missing item type\nObjects",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:333"
        },
        {
            "message": "Missing item type\nUtility",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:368"
        },
        {
            "message": "Missing item type\nChaining",
            "line": " ../src/com/codebelt/structurets/_declare/underscore.d.ts:380"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/component/CarouselComponent.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/component/TabComponent.ts:112"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/component/TabComponent.ts:124"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/component/TabComponent.ts:136"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:46"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/BaseTransition.ts:140"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionCrossFade.ts:71"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionFadeOutAndIn.ts:71"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionNone.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionNone.ts:54"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionNone.ts:71"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushDown.ts:71"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushLeft.ts:74"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushRight.ts:74"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/transition/TransitionPushUp.ts:71"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/viewcontroller/BaseViewController.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/ApplicationCacheController.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/ApplicationCacheController.ts:79"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/ApplicationCacheController.ts:99"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/BaseController.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/LocalStorageController.ts:257"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/RouterController.ts:48"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/TransitionManager.ts:108"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/controller/UndoManager.ts:40"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/Bitmap.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/Canvas.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/Canvas.ts:79"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/CanvasElement.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:107"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:180"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:216"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DOMElement.ts:423"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:215"
        },
        {
            "message": "Missing item type\nThe setSize method sets the bounds within which the containing DisplayObjectContainer would\nlike that component to lay itself out. It is expected that calling setSize will automatically\ncall {{#crossLink \"DisplayObjectContainer/layoutChildren:method\"}}{{/crossLink}}.",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:305"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/DisplayObjectContainer.ts:342"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/MovieClip.ts:32"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/display/Stage.ts:79"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/ApplicationCacheEvent.ts:47"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/BaseEvent.ts:62"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/CarouselEvent.ts:23"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/EventBroker.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/EventDispatcher.ts:43"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/EventDispatcher.ts:227"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/LanguageEvent.ts:47"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/LoaderEvent.ts:47"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/LocalStorageEvent.ts:48"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/NetworkMonitorEvent.ts:47"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/RequestEvent.ts:47"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/RouterEvent.ts:48"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/TimerEvent.ts:47"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/TransitionManagerEvent.ts:47"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/event/TweenEvent.ts:23"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts:39"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts:59"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/model/vo/LanguageConfigVO.ts:72"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/model/Collection.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/model/Collection.ts:424"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/model/LanguageModel.ts:46"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/model/ValueObject.ts:43"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/net/URLContentType.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/net/URLLoader.ts:43"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/net/URLLoaderDataFormat.ts:40"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/net/URLRequest.ts:45"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/net/URLRequestMethod.ts:38"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts:3"
        },
        {
            "message": "Missing item type\nGenerates a hash string from the string being passed in. In this case it is a function that is casted as string value.",
            "line": " ../src/com/codebelt/structurets/plugin/jquery.addEventListener.ts:7"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/request/BaseRequest.ts:44"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/request/JsonRequest.ts:31"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/AssetLoader.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/BrowserUtils.ts:38"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/DataLoader.ts:40"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/DateUtil.ts:40"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/HtmlLoader.ts:45"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/ImageLoader.ts:42"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/MathUtil.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/MerchantUtil.ts:38"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/MobileUtil.ts:38"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/NumberUtil.ts:40"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/StringUtil.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/TemplateFactory.ts:41"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:43"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/Timer.ts:240"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/TransitionFactory.ts:52"
        },
        {
            "message": "Missing item type\nYUIDoc_comment",
            "line": " ../src/com/codebelt/structurets/util/TransitionFactory.ts:79"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/TransitionFactory.ts:128"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/Util.ts:38"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/ValidationUtil.ts:38"
        },
        {
            "message": "Missing item type",
            "line": " ../src/com/codebelt/structurets/util/XML.ts:7"
        }
    ]
}